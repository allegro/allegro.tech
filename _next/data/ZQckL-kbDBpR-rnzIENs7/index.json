{"pageProps":{"posts":[{"title":"Tired of repetitive tasks?! Go for RPA!","link":"https://blog.allegro.tech/2024/02/rpa.html","pubDate":"Tue, 20 Feb 2024 00:00:00 +0100","authors":{"author":[{"name":["Dominika Pleśniak"],"photo":["https://blog.allegro.tech/img/authors/dominika.plesniak.jpg"],"url":["https://blog.allegro.tech/authors/dominika.plesniak"]}]},"content":"<p>Have you ever thought about ways of reducing repetitive, monotonous tasks? Maybe you would like to try to automate your own tasks? I will show you what\ntechnology we use at Allegro, what processes we have automated, and how to do it on your own.</p>\n\n<h2 id=\"what-is-rpa-and-how-do-we-use-it-at-allegro\">What is RPA and how do we use it at Allegro?</h2>\n\n<blockquote>\n  <p><em>“Robotic process automation (RPA) is a software technology that makes it easy to build, deploy, and manage software robots that emulate humans actions\ninteracting with digital systems and software. Just like people, software robots can do things like understand what’s on a screen, complete the right \nkeystrokes, navigate systems, identify and extract data, and perform a wide range of defined actions.”</em> \n<br /> \nSource: <a href=\"https://www.uipath.com/rpa/robotic-process-automation\">UiPath Robotic Process Automation</a></p>\n</blockquote>\n\n<p>At Allegro, our Process Automation Team primarily relies on UiPath as our key RPA tool. Processes suitable for automation through RPA are standardized, repetitive, manual, with high volume, stable and has data in digital form. If possible, we try to combine UiPath with different integrations such as scripts, databases, chatbots.</p>\n\n<p>UiPath provides the ability to automate all kinds of applications (web, desktop, java, etc.). Automations can be created through the user interface of an \napplication, meaning that the created robot imitates an employee’s clicks. Furthermore, when an application’s API is available, it is easy to integrate \nUiPath with API, and in that case, the robot’s steps are performed in the backend-side. UiPath also allows the use of\nOCR (optical character recognition) and machine learning modules.</p>\n\n<p>Thanks to the various roles within Process Automation Team, such as analysts and developers, we are able to approach processes holistically. When we receive an idea for \nautomatization, we first perform an assessment to establish if the process is suitable for robotization, and we calculate the Return On Investment (ROI) and the potential of\ntime savings from automation in terms of <a href=\"https://en.wikipedia.org/wiki/Full-time_equivalent\">Full-Time Equivalent (FTE)</a>. Once the assessment is done and costs of investment return are approved, we analyze and optimize the process. \nAs a result, the analyst prepares a Process Definition Document (PDD) which serves as an instruction/description of the process.\nIn the next phase, based on PDD, a developer takes over the process and designs a solution. After that, the development part begins while the robot is created.\nLast but not least, there is the testing phase, where we check the results of the robotization together with the analyst and the business process owner.\nIf the solution is successful and performs as intended, we run the robot in production. Then we enter the hypercare period, during which we monitor and make necessary adjustments\nin tandem with the business process owner. After about two weeks of this phase, if both sides are satisfied with the results, we “go live”.</p>\n\n<p><img src=\"/img/articles/2024-01-16-rpa/robotic_process_automation_workflow.png\" alt=\"Robotic Process Automation Workflow\" /></p>\n\n<h2 id=\"what-kind-of-processes-do-we-automate\">What kind of processes do we automate?</h2>\n\n<h3 id=\"jira-automations\">Jira automations</h3>\n\n<p>In our organization we have a lot of processes based on Jira “tickets”. Many employees had to manage and operate Jira’s queues. Our team implemented several \nrobots to relieve administrators from repetitive tasks. Jira has an API available which we used in combination with the UiPath platform. \nFor example, when an employee is leaving Allegro, several Jira tasks are automatically created to retract authorization in various systems. Previously, these tasks were \nperformed manually by administrators. Now, the process is fully automated. The robot manages tickets via API and checks accounts in systems by GUI.</p>\n\n<h3 id=\"sap-enterprise-resource-planning-system-processes\">SAP (Enterprise Resource Planning system) processes</h3>\n\n<p>All repetitive, rule-based processes in SAP can be automated. For instance, let’s consider the processes in the Finance team. They handle massive amounts of \ninvoices. For some suppliers, with the largest quantity of invoices and unchangeable invoice layout, we were able to automate the accounting process in SAP. \nThe robot accesses an appropriate transaction in SAP and lists invoices. Based on business rules, the bot selects a specific invoice, opens it, and \nreads selected values. Then, it compares these values with business conditions which were established in the Process Definition Document. Depending on the \nsituation, the robot fills or corrects adequate fields and either accepts or rejects the invoice.</p>\n\n<h3 id=\"automation-by-api\">Automation by API</h3>\n\n<p>One of the excellent examples of API automations is the process of changing product categories on the Allegro platform. Allegro hosts a vast number of products. Initially, \nnot all of them are assigned to the proper category. We were able to create a robot that uses Allegro’s REST API to move these products to the target category.\nBefore automation, this task was time-consuming and monotonous. Recently, the robot completed a huge task, moving almost 3 million products in two days!</p>\n\n<h3 id=\"processes-across-multiple-applications-and-integrations\">Processes across multiple applications and integrations</h3>\n\n<p>It is possible to combine tasks from different applications into one robot. This approach allows us to automate more complex processes. \nThe most interesting ones include:</p>\n<ul>\n  <li>The process of user’s data change in Allegro platform is carried out at the request of users. To perform all actions, the bot uses Salesforce and \nInternal Admin tools. The robot downloads a report with requests, then checks the pre-set business rules. Based on the results, the bot changes user’s data or\n rejects the request.\nThe robot is working 24 hours a day, handling 80% of applications. The number of tasks it performs can be compared to the work of four full-time employees.</li>\n  <li>The anti-fraud process. The robot verifies hundreds of thousands of messages and blocks suspected accounts. Using suspicious messages from the Spoof \napplication (Message Center), the robot determines if a message is spam or not. To make a proper decision, it checks various business conditions to decide \nif an account should be blocked. After making the decision, the bot blocks the account’s message sending capabilities.</li>\n  <li>The process for the HR team where the robot works on two applications. The robot interacts with the interface of an application and also uses its API. \nIn the recruitment process, specialists from different fields participate and help recruiters to find the best candidates. These specialists are known as \nthe Hiring Squad. There is a significant number of people involved in this process, and the robot is responsible for keeping the Hiring Squad updated. Based \non a report with job offers the robot checks if a candidate has active status for specific skills required for the interview process. If the status is active, \nthe bot selects a particular job offer from the platform and assigns the interviewer from Hiring Squad.</li>\n</ul>\n\n<h3 id=\"human-in-the-loop\">“Human in the Loop”</h3>\n\n<p>Those processes which are rule-based, repetitive, but require human decision-making or the robot does not know what to do on the basis of the collected data, \nare referred to as “human in the loop”. A great example could be the process of damage complaints regarding packages that we have automated. The robot gathers a report \nfrom Salesforce and filters all jobs referring to damaged packages. Then, in the Internal Admin tool, the bot checks and collects various pieces of information based \non specific business rules. If necessary, it also checks the status of packages on carrier websites. Finally, the robot creates a form with all the gathered \ndetails, information, and attachments. This form is sent to a human for verification. With all this collected information, an employee can quickly decide \nwhether the complaint should be accepted. Then, the decision is sent back to the robot, which is able to close the case. It sends appropriate emails and \nrecords the results in the system.</p>\n\n<h2 id=\"robotics-workshops-for-employees\">Robotics workshops for employees</h2>\n\n<p>Additionally, twice a year, we organize an educational program for employees called “Allegro Robot School”. Employees get a chance to learn how to build \nbasic robots in UiPath and build one to support their daily tasks. To sign up for the program there is no need to have coding experience. It is enough if \nan employee can think analytically and has motivation to learn new things.\nThe program is intensive, consisting of five days of workshops. After the workshops, there is a three-weeks period where, with our support, employees choose \ntheir own processes and build robots.\nFor each edition we have around ten participants. The robots created during one edition account for about 3 FTEs! We have many examples of graduate \nemployees who created more robots to support their daily work in a team. Moreover, we created a Slack community for graduates to stay in touch, share \nknowledge, and support the development of new robots.</p>\n\n<h2 id=\"summary\">Summary</h2>\n\n<p>Today, the number of processes and different applications used in companies is enormous. Moreover, it can sometimes be challenging to integrate one application\nwith another, and employees are burdened with many manual, repetitive tasks. It is important to know that there is a solution to automate these processes. \nThe RPA technology can quickly help with that, freeing up employees for more creative tasks. The above examples visualize the possibilities of using UiPath.\nThe most important thing to remember is that the process to automate has to be manual, rule-based, repetitive, with data in digital form. What is more, \nit is possible to learn for those who don’t have coding experience. Thanks to that, the automation of processes can be expanded across the company beyond the Process Automation Team.</p>\n\n","contentSnippet":"Have you ever thought about ways of reducing repetitive, monotonous tasks? Maybe you would like to try to automate your own tasks? I will show you what\ntechnology we use at Allegro, what processes we have automated, and how to do it on your own.\nWhat is RPA and how do we use it at Allegro?\n“Robotic process automation (RPA) is a software technology that makes it easy to build, deploy, and manage software robots that emulate humans actions\ninteracting with digital systems and software. Just like people, software robots can do things like understand what’s on a screen, complete the right \nkeystrokes, navigate systems, identify and extract data, and perform a wide range of defined actions.” \n \nSource: UiPath Robotic Process Automation\nAt Allegro, our Process Automation Team primarily relies on UiPath as our key RPA tool. Processes suitable for automation through RPA are standardized, repetitive, manual, with high volume, stable and has data in digital form. If possible, we try to combine UiPath with different integrations such as scripts, databases, chatbots.\nUiPath provides the ability to automate all kinds of applications (web, desktop, java, etc.). Automations can be created through the user interface of an \napplication, meaning that the created robot imitates an employee’s clicks. Furthermore, when an application’s API is available, it is easy to integrate \nUiPath with API, and in that case, the robot’s steps are performed in the backend-side. UiPath also allows the use of\nOCR (optical character recognition) and machine learning modules.\nThanks to the various roles within Process Automation Team, such as analysts and developers, we are able to approach processes holistically. When we receive an idea for \nautomatization, we first perform an assessment to establish if the process is suitable for robotization, and we calculate the Return On Investment (ROI) and the potential of\ntime savings from automation in terms of Full-Time Equivalent (FTE). Once the assessment is done and costs of investment return are approved, we analyze and optimize the process. \nAs a result, the analyst prepares a Process Definition Document (PDD) which serves as an instruction/description of the process.\nIn the next phase, based on PDD, a developer takes over the process and designs a solution. After that, the development part begins while the robot is created.\nLast but not least, there is the testing phase, where we check the results of the robotization together with the analyst and the business process owner.\nIf the solution is successful and performs as intended, we run the robot in production. Then we enter the hypercare period, during which we monitor and make necessary adjustments\nin tandem with the business process owner. After about two weeks of this phase, if both sides are satisfied with the results, we “go live”.\n\nWhat kind of processes do we automate?\nJira automations\nIn our organization we have a lot of processes based on Jira “tickets”. Many employees had to manage and operate Jira’s queues. Our team implemented several \nrobots to relieve administrators from repetitive tasks. Jira has an API available which we used in combination with the UiPath platform. \nFor example, when an employee is leaving Allegro, several Jira tasks are automatically created to retract authorization in various systems. Previously, these tasks were \nperformed manually by administrators. Now, the process is fully automated. The robot manages tickets via API and checks accounts in systems by GUI.\nSAP (Enterprise Resource Planning system) processes\nAll repetitive, rule-based processes in SAP can be automated. For instance, let’s consider the processes in the Finance team. They handle massive amounts of \ninvoices. For some suppliers, with the largest quantity of invoices and unchangeable invoice layout, we were able to automate the accounting process in SAP. \nThe robot accesses an appropriate transaction in SAP and lists invoices. Based on business rules, the bot selects a specific invoice, opens it, and \nreads selected values. Then, it compares these values with business conditions which were established in the Process Definition Document. Depending on the \nsituation, the robot fills or corrects adequate fields and either accepts or rejects the invoice.\nAutomation by API\nOne of the excellent examples of API automations is the process of changing product categories on the Allegro platform. Allegro hosts a vast number of products. Initially, \nnot all of them are assigned to the proper category. We were able to create a robot that uses Allegro’s REST API to move these products to the target category.\nBefore automation, this task was time-consuming and monotonous. Recently, the robot completed a huge task, moving almost 3 million products in two days!\nProcesses across multiple applications and integrations\nIt is possible to combine tasks from different applications into one robot. This approach allows us to automate more complex processes. \nThe most interesting ones include:\nThe process of user’s data change in Allegro platform is carried out at the request of users. To perform all actions, the bot uses Salesforce and \nInternal Admin tools. The robot downloads a report with requests, then checks the pre-set business rules. Based on the results, the bot changes user’s data or\n rejects the request.\nThe robot is working 24 hours a day, handling 80% of applications. The number of tasks it performs can be compared to the work of four full-time employees.\nThe anti-fraud process. The robot verifies hundreds of thousands of messages and blocks suspected accounts. Using suspicious messages from the Spoof \napplication (Message Center), the robot determines if a message is spam or not. To make a proper decision, it checks various business conditions to decide \nif an account should be blocked. After making the decision, the bot blocks the account’s message sending capabilities.\nThe process for the HR team where the robot works on two applications. The robot interacts with the interface of an application and also uses its API. \nIn the recruitment process, specialists from different fields participate and help recruiters to find the best candidates. These specialists are known as \nthe Hiring Squad. There is a significant number of people involved in this process, and the robot is responsible for keeping the Hiring Squad updated. Based \non a report with job offers the robot checks if a candidate has active status for specific skills required for the interview process. If the status is active, \nthe bot selects a particular job offer from the platform and assigns the interviewer from Hiring Squad.\n“Human in the Loop”\nThose processes which are rule-based, repetitive, but require human decision-making or the robot does not know what to do on the basis of the collected data, \nare referred to as “human in the loop”. A great example could be the process of damage complaints regarding packages that we have automated. The robot gathers a report \nfrom Salesforce and filters all jobs referring to damaged packages. Then, in the Internal Admin tool, the bot checks and collects various pieces of information based \non specific business rules. If necessary, it also checks the status of packages on carrier websites. Finally, the robot creates a form with all the gathered \ndetails, information, and attachments. This form is sent to a human for verification. With all this collected information, an employee can quickly decide \nwhether the complaint should be accepted. Then, the decision is sent back to the robot, which is able to close the case. It sends appropriate emails and \nrecords the results in the system.\nRobotics workshops for employees\nAdditionally, twice a year, we organize an educational program for employees called “Allegro Robot School”. Employees get a chance to learn how to build \nbasic robots in UiPath and build one to support their daily tasks. To sign up for the program there is no need to have coding experience. It is enough if \nan employee can think analytically and has motivation to learn new things.\nThe program is intensive, consisting of five days of workshops. After the workshops, there is a three-weeks period where, with our support, employees choose \ntheir own processes and build robots.\nFor each edition we have around ten participants. The robots created during one edition account for about 3 FTEs! We have many examples of graduate \nemployees who created more robots to support their daily work in a team. Moreover, we created a Slack community for graduates to stay in touch, share \nknowledge, and support the development of new robots.\nSummary\nToday, the number of processes and different applications used in companies is enormous. Moreover, it can sometimes be challenging to integrate one application\nwith another, and employees are burdened with many manual, repetitive tasks. It is important to know that there is a solution to automate these processes. \nThe RPA technology can quickly help with that, freeing up employees for more creative tasks. The above examples visualize the possibilities of using UiPath.\nThe most important thing to remember is that the process to automate has to be manual, rule-based, repetitive, with data in digital form. What is more, \nit is possible to learn for those who don’t have coding experience. Thanks to that, the automation of processes can be expanded across the company beyond the Process Automation Team.","guid":"https://blog.allegro.tech/2024/02/rpa.html","categories":["tech","rpa"],"isoDate":"2024-02-19T23:00:00.000Z"},{"title":"Don’t bother: it is only a little expired","link":"https://blog.allegro.tech/2024/02/couchbase-expired-docs-tuning.html","pubDate":"Mon, 12 Feb 2024 00:00:00 +0100","authors":{"author":[{"name":["Tomasz Ziółkowski"],"photo":["https://blog.allegro.tech/img/authors/tomasz.ziolkowski.jpg"],"url":["https://blog.allegro.tech/authors/tomasz.ziolkowski"]}]},"content":"<p>This story shows how we strive to fix issues reported by our customers regarding inconsistent listing views on our e-commerce platform.\nWe will use a top-down manner to guide you through our story. At the beginning, we highlight the challenges faced by our customers, followed by presenting\nbasic information on how views are personalized on our web application. We then delve deeper into our internal architecture, aiming to clarify how\nit supports High Availability (HA) by using two data centers. Finally, we advertise a little <em><a href=\"https://www.couchbase.com/\">Couchbase</a></em>,\ndistributed NoSQL database, and explain why it is an excellent storage solution for such an architecture.</p>\n\n<p>Later, we explain how the absence of adequate tools hindered us from uncovering the root cause of the problem and detail the adjustments we made in Couchbase\nto overcome these challenges. What can you glean from our experience? Firstly, you might be inspired to consider Couchbase as a storage solution in\na multi-regional, active-active architecture. Secondly, you’ll discover a tool that aids in monitoring Couchbase behavior in a multi-region setting.\nThirdly, we share some tips on manipulating settings in Couchbase.\nLastly, you’ll be able to decipher the mysterious title of our story and understand a few technological abbreviations.</p>\n\n<h2 id=\"what-you-ask-is-not-what-you-get\">What you ask is NOT what you get</h2>\n\n<p>An ongoing challenge in the development of the <a href=\"https://allegro.tech/\">Allegro platform</a> has been the product catalog.\nOriginating from a C2C platform where offers lacked references to pre-existing products, our shift towards the B2C model brought forth the need to merge\noffers representing the same product. This was essential for enhancing the selection experience for our buyers. The journey to construct such a catalog involved\nvarious approaches, and after numerous iterations, it now functions seamlessly.\nFor the context of this article, a crucial detail is that our platform must support at least two ways of selecting offers:</p>\n\n<ol>\n  <li>Offer listing: Each presented entity is a unique offer listed by a particular merchant.\n  <img src=\"/img/articles/2024-02-12-couchbase-expired-docs-tuning/offers-view.png\" alt=\"offers-listing\" /></li>\n  <li>Product listing: Each presented entity represents a unique product connected to a set of offers where you can make a purchase.\n  <img src=\"/img/articles/2024-02-12-couchbase-expired-docs-tuning/products-view.png\" alt=\"products-listing\" /></li>\n</ol>\n\n<p>Given the diverse factors influencing whether a customer prefers selecting offers or products, we’ve deliberately avoided limiting the selection experience.\nIn many cases, customers are free to choose either method, and their preferred choice is remembered to ensure a consistent and personalized experience.\nBoth offer and product listing views feature a switch that allows users to change their personal preference. With each click,\nthe personalized preference is updated, and the current view is refreshed accordingly.</p>\n\n<p>However, our journey took an unexpected turn when we began receiving reports that customers, despite changing their preference, continued to see the same view.\nFor instance, if a customer switched from the offer listing to the product listing, they would still receive the offer listing. The frustration escalated\nas this invalid view persisted, even after manual page refreshes, lasting several times before finally aligning with the customer’s preference after a delay,\nsometimes up to a minute. This discrepancy became the starting point of our investigation.</p>\n\n<h2 id=\"remedy-for-rendering-views-in-soa---opbox\">Remedy for rendering views in SOA - Opbox</h2>\n\n<p>Dedicated readers of this blog may already be aware that the Allegro platform embraces a microservices architecture, a powerful strategy for\ndividing domains and responsibilities. However, this approach presents challenges when it comes to offering a unified graphical user interface (GUI) for\nour customers. To bridge this gap, we successfully implemented our internal Content Management System (CMS) platform named Opbox.\nWhile delving into the intricate details of Opbox is beyond the scope of this narrative, those interested in our frontend management can explore\nour <a href=\"/2016/03/Managing-Frontend-in-the-microservices-architecture.html\">blogpost</a> or,\nif inclined, listen to our podcast in Polish <a href=\"https://podcast.allegro.tech/od_inzyniera_do_lidera_w_allegro/\">here</a>.</p>\n\n<p>For our story, what’s crucial to note is that Opbox plays a pivotal role in fetching information from microservices, particularly about customer preferences.\nIt collaborates with the microservice responsible for storing such data, ensuring the preparation of a personalized view for each user.</p>\n\n<p>No detective skills were needed to deduce that the observed issues originated from the microservice responsible for storing customer preferences,\nwhich was serving outdated information.\nThe real question at hand was how to mitigate this challenge.</p>\n\n<p>Completing our narrative puzzle involves highlighting the interface familiar to our web application customers,\nwhich operates across two domains with distinct responsibilities:</p>\n\n<ul>\n  <li><em>allegro.pl</em>: This domain is responsible for providing the GUI (HTML views), rendered via Opbox.</li>\n  <li><em>edge.allegro.pl</em>: This domain takes charge of direct interactions via <em>AJAX</em> (Asynchronous JavaScript) with specific microservices.</li>\n</ul>\n\n<p>In simpler terms, the listing view is rendered through the <em>allegro.pl</em> domain, while the task of switching personal preferences is handled via the\n<em>edge.allegro.pl</em> domain.</p>\n\n<h2 id=\"you-cant-handle-this\">You can’t HAndle this</h2>\n\n<p>As a member of the Technical Platform department, my perspective is likely biased towards High Availability (HA) and everything that enhances\nAllegro’s resilience to the outage of individual components or services. The fundamental principle guiding our HA strategy involves dispersing each\nmicroservice to two different locations, typically different data centers. This approach serves as a robust contingency plan, enabling us to overcome not only\nminor outages but also significant disasters, such as the outage of an entire data center.</p>\n\n<p>It’s essential to note that our HA strategy operates on a multi-region active-active approach. In simpler terms, all our data centers or clouds are actively\nhandling traffic simultaneously. While this approach ensures that everything remains operational in each location, it also introduces its own set of challenges.\nBalancing the benefits of simultaneous activity with the complexities it brings is a constant consideration in our pursuit of a resilient\nand fault-tolerant system.</p>\n\n<h3 id=\"navigating-the-multi-region-challenges\">Navigating the multi-region challenges</h3>\n\n<p>Handling traffic in such a manner can undoubtedly impact performance. Each HTTP request from our customers typically involves a set of microservices.\nTo mitigate the challenges of cross-datacenter traffic between these services, we introduced the principle of locality. In simple terms, if an instance of\nmicroservice A needs to communicate with microservice B, we prioritize instances running in the same location or data center.</p>\n\n<p>However, it’s crucial to note that the locality principle faces limitations, especially when it comes to certain storage solutions. For instance,\nmost Relational Database Management Systems (RDBMS) and MongoDB databases only allow writes through a specific node. This means that even if the traffic\nis handled by an instance in <em>DATA CENTER A</em>, it may still be necessary to query a database node in <em>DATA CENTER B</em> to write some data.\nThe challenge lies in finding storage solutions that permit simultaneous writing to nodes in the same location. One such example is\nCouchbase clusters with cross-data center replication, offering a solution to the intricacies of our multi-region, active-active architecture.</p>\n\n<h3 id=\"roots-of-inconsistency\">Roots of inconsistency</h3>\n\n<p>As mentioned earlier, we employ two domains to provide an interface for our customers. In the context of High Availability (HA), this setup implies that\nrendering can be handled by <em>DATA CENTER A</em>, while <em>AJAX</em> communication simultaneously takes place in <em>DATA CENTER B</em>. This dual-domain approach necessitates\na replication mechanism that applies changes made in one data center to the other.</p>\n\n<p>However, a critical challenge arises when the replication mechanism lags behind the Round-Trip Time (RTT) of client requests, as illustrated in\nthe diagram below. The red rectangle in the diagram symbolizes the replication process of a single write operation. If this process takes longer than\nthe back-and-forth exchange of HTTP response and request, the client may receive an invalid view. It’s crucial to note that the second request is directed\nstraight to data center B and is not proxied by <em>DATA CENTER A</em>.</p>\n\n<p>Mitigating this issue, short of radical architectural changes, becomes a significant concern. The intricacies of replication timing are central to ensuring\na seamless and accurate user experience in our multi-data center, active-active architecture.</p>\n\n<p><img src=\"/img/articles/2024-02-12-couchbase-expired-docs-tuning/replication.png\" alt=\"replication-lag\" /></p>\n\n<p>The replication lag can be influenced by various factors depending on the storage solutions in use. One undeniable factor is that it cannot be faster than\nthe light distance between data centers. Fortunately, in our case, this distance is minimal, and for the purpose of this story, it can be considered negligible.</p>\n\n<h2 id=\"fortunate-storage\">Fortunate storage</h2>\n\n<p>As I mentioned earlier, Couchbase lends itself to adhering to our locality principle in the communication between microservices and databases within\nour architecture. Fortunately, it serves as the storage solution for the microservice responsible for maintaining customers’ preferences. What’s even more\nfortunate is the swift cross-cluster replication mechanism,\n<em><a href=\"https://docs.couchbase.com/server/current/learn/clusters-and-availability/xdcr-overview.html\">XDCR</a></em>, employed by Couchbase.\nIn fact, the changes are applied on a cluster in the second data center faster than one Round-Trip Time (RTT) between data centers – pretty cool, isn’t it?\nIt’s noteworthy that <em>XDCR</em> can be configured in either a unidirectional or bidirectional manner. In our case, given active-active writes in all locations,\nwe use a bidirectional configuration to replicate changes, irrespective of the location in which they were applied.</p>\n\n<h2 id=\"deeper-analysis-unraveling-the-replication-enigma\">Deeper analysis: unraveling the replication enigma</h2>\n\n<p>Couchbase offers an abundance of highly detailed metrics regarding the internal state of the cluster. However, without a deep understanding,\nit becomes challenging to decipher whether irregularities or spikes in these metrics may indicate potential problems for customers. This challenge is\nparticularly pronounced when dealing with cross-cluster replication, where overseeing the state of two clusters simultaneously is a complex task.</p>\n\n<p>At Allegro, our commitment to meticulous data collection extends to being detailed in gathering performance metrics from a microservice perspective.\nDespite Couchbase providing meaningful information, the story would be incomplete if it solely relied on easily accessible metrics. In reality, these metrics\nfailed to reveal relevant information; read/write times remained relatively stable even during moments when customers reported issues.</p>\n\n<p>To gain a deeper understanding of the situation, our approach was clear—gather more data, with a specific focus on replication performance. This strategic\nemphasis on targeted data collection allowed us to delve into the intricacies of the replication process and uncover the underlying factors contributing to\nthe challenges faced by our customers.</p>\n\n<h3 id=\"measuring-replication-performance-the-birth-of-cb-tracker\">Measuring replication performance: the birth of cb-tracker</h3>\n\n<p>Due to the lack of readily available tools and our inability to find suitable options, we took matters into our own hands and developed our open-source\ncommand-line tool, <em><a href=\"https://github.com/ziollek/couchbase-replication-ping\">cb-tracker</a></em>. This tool serves the purpose of continuously measuring\nreplication lag. Its functionality revolves around connecting to two Couchbase clusters, designated as A and B, connected via <em>XDCR</em> replication.</p>\n\n<p>The primary objective of our tool is to measure the Replication Round-Trip Time (RTT). In simpler terms, it gauges how quickly a document written to cluster A\nbecomes accessible on cluster B, and vice versa. The logic behind this measurement is inspired by the widely used network diagnostic tool <em>ping</em>.\nTo provide a clearer understanding of how this tool performs measurements, refer to the diagram below.</p>\n\n<p><img src=\"/img/articles/2024-02-12-couchbase-expired-docs-tuning/cb-tracker.png\" alt=\"cb-tracker-flow\" /></p>\n\n<p>With the deployment of such a tool, we initiated continuous replication monitoring in the Couchbase bucket used by the microservice responsible for managing\ncustomer preferences. This monitoring effort provided us with valuable insights into the cyclic spikes in replication time. As depicted in the diagram below,\nwe observed two spikes recurring every hour, about 20 minutes apart. This observation prompted us to investigate potential periodic tasks\nwithin Couchbase that might be contributing to this cyclic behavior.</p>\n\n<p><img src=\"/img/articles/2024-02-12-couchbase-expired-docs-tuning/replication-spikes.png\" alt=\"replication-spikes\" /></p>\n\n<h3 id=\"there-are-my-knobs-unraveling-couchbase-quirks\">There are my knobs: unraveling couchbase quirks</h3>\n\n<p>While we’ve extolled the virtues of Couchbase, every solution has its quirks, and as the saying goes, the devil is in the details… and defaults :).\nIn our case, the intricacy arose from the documents stored in the scrutinized bucket, each having a set Time-To-Live (TTL).\nThe implementation of <em>TTL</em> on the Couchbase side is quite intriguing — expired documents are not deleted immediately; instead, they are skipped by\nthe fetching logic. This situation could potentially last indefinitely, leading to storage consumption concerns.</p>\n\n<p>To handle expired documents, Couchbase triggers a dedicated process every 60 minutes; the interval is controlled by <a href=\"https://docs.couchbase.com/server/current/cli/cbepctl/set-flush_param.html#options\">exp_pager_stime parameter</a>.\nEach run flushes out these expired documents from storage. However, an additional default setting — specifically,\nthe flag <em><a href=\"https://docs.couchbase.com/server/current/rest-api/rest-xdcr-adv-settings.html#get-settings-for-all-replications\">filterExpiration</a></em> indicating that\neach flush should be replicated via <em>XDCR</em> — created an unintended consequence. This default behavior caused a significant influx of events every hour,\noverwhelming <em>XDCR</em>. Consequently, other events, such as changes made by the microservice, had to be queued.</p>\n\n<p>Understanding that this mechanism operates on each cluster and that every expired document would eventually be deleted,\nwe recognized the need to address this overload of the replication mechanism. To rectify this, we adjusted the mentioned flag and increased the frequency\nof cleaning expired documents. Following this optimization, we observed a notable improvement, with no further instances of replication spikes.</p>\n\n<h2 id=\"summary\">Summary</h2>\n\n<p>We grappled with a shortage of effective tools to monitor replication from a client perspective. As we’ve illustrated, pinpointing the genuine root cause of our\nproblem was crucial. I hope that the tool we’ve introduced can also assist you in the ongoing quest for those valuable milliseconds.</p>\n\n<p>Couchbase offers a comprehensive set of configuration parameters with default settings that might not be optimal for handling high-volume traffic.\nAs demonstrated, there are subtle threats that can undermine the experience of an otherwise speedy replication mechanism like <em>XDCR</em>.\nIt’s worth noting that our narrative is based on the community edition of Couchbase (v6), and it’s unfortunate that <em>XDCR</em> is\n<a href=\"https://www.couchbase.com/blog/couchbase-modifies-license-free-community-edition-package/\">withdrawn</a> from the open-source\nversion of Couchbase in the next release. I trust that our story can offer insights to help fine-tune your configuration and navigate potential challenges.</p>\n\n<h3 id=\"links\">Links</h3>\n\n<ol>\n  <li><a href=\"https://docs.couchbase.com/server/current/rest-api/rest-xdcr-adv-settings.html#get-settings-for-all-replications\">Couchbase: advanced replication settings</a></li>\n  <li><a href=\"https://docs.couchbase.com/server/current/cli/cbepctl/set-flush_param.html#options\">Couchbase: flush parameters</a></li>\n  <li><a href=\"https://github.com/ziollek/couchbase-replication-ping\">cb-tracker repository</a></li>\n</ol>\n","contentSnippet":"This story shows how we strive to fix issues reported by our customers regarding inconsistent listing views on our e-commerce platform.\nWe will use a top-down manner to guide you through our story. At the beginning, we highlight the challenges faced by our customers, followed by presenting\nbasic information on how views are personalized on our web application. We then delve deeper into our internal architecture, aiming to clarify how\nit supports High Availability (HA) by using two data centers. Finally, we advertise a little Couchbase,\ndistributed NoSQL database, and explain why it is an excellent storage solution for such an architecture.\nLater, we explain how the absence of adequate tools hindered us from uncovering the root cause of the problem and detail the adjustments we made in Couchbase\nto overcome these challenges. What can you glean from our experience? Firstly, you might be inspired to consider Couchbase as a storage solution in\na multi-regional, active-active architecture. Secondly, you’ll discover a tool that aids in monitoring Couchbase behavior in a multi-region setting.\nThirdly, we share some tips on manipulating settings in Couchbase.\nLastly, you’ll be able to decipher the mysterious title of our story and understand a few technological abbreviations.\nWhat you ask is NOT what you get\nAn ongoing challenge in the development of the Allegro platform has been the product catalog.\nOriginating from a C2C platform where offers lacked references to pre-existing products, our shift towards the B2C model brought forth the need to merge\noffers representing the same product. This was essential for enhancing the selection experience for our buyers. The journey to construct such a catalog involved\nvarious approaches, and after numerous iterations, it now functions seamlessly.\nFor the context of this article, a crucial detail is that our platform must support at least two ways of selecting offers:\nOffer listing: Each presented entity is a unique offer listed by a particular merchant.\n  \nProduct listing: Each presented entity represents a unique product connected to a set of offers where you can make a purchase.\n  \nGiven the diverse factors influencing whether a customer prefers selecting offers or products, we’ve deliberately avoided limiting the selection experience.\nIn many cases, customers are free to choose either method, and their preferred choice is remembered to ensure a consistent and personalized experience.\nBoth offer and product listing views feature a switch that allows users to change their personal preference. With each click,\nthe personalized preference is updated, and the current view is refreshed accordingly.\nHowever, our journey took an unexpected turn when we began receiving reports that customers, despite changing their preference, continued to see the same view.\nFor instance, if a customer switched from the offer listing to the product listing, they would still receive the offer listing. The frustration escalated\nas this invalid view persisted, even after manual page refreshes, lasting several times before finally aligning with the customer’s preference after a delay,\nsometimes up to a minute. This discrepancy became the starting point of our investigation.\nRemedy for rendering views in SOA - Opbox\nDedicated readers of this blog may already be aware that the Allegro platform embraces a microservices architecture, a powerful strategy for\ndividing domains and responsibilities. However, this approach presents challenges when it comes to offering a unified graphical user interface (GUI) for\nour customers. To bridge this gap, we successfully implemented our internal Content Management System (CMS) platform named Opbox.\nWhile delving into the intricate details of Opbox is beyond the scope of this narrative, those interested in our frontend management can explore\nour blogpost or,\nif inclined, listen to our podcast in Polish here.\nFor our story, what’s crucial to note is that Opbox plays a pivotal role in fetching information from microservices, particularly about customer preferences.\nIt collaborates with the microservice responsible for storing such data, ensuring the preparation of a personalized view for each user.\nNo detective skills were needed to deduce that the observed issues originated from the microservice responsible for storing customer preferences,\nwhich was serving outdated information.\nThe real question at hand was how to mitigate this challenge.\nCompleting our narrative puzzle involves highlighting the interface familiar to our web application customers,\nwhich operates across two domains with distinct responsibilities:\nallegro.pl: This domain is responsible for providing the GUI (HTML views), rendered via Opbox.\nedge.allegro.pl: This domain takes charge of direct interactions via AJAX (Asynchronous JavaScript) with specific microservices.\nIn simpler terms, the listing view is rendered through the allegro.pl domain, while the task of switching personal preferences is handled via the\nedge.allegro.pl domain.\nYou can’t HAndle this\nAs a member of the Technical Platform department, my perspective is likely biased towards High Availability (HA) and everything that enhances\nAllegro’s resilience to the outage of individual components or services. The fundamental principle guiding our HA strategy involves dispersing each\nmicroservice to two different locations, typically different data centers. This approach serves as a robust contingency plan, enabling us to overcome not only\nminor outages but also significant disasters, such as the outage of an entire data center.\nIt’s essential to note that our HA strategy operates on a multi-region active-active approach. In simpler terms, all our data centers or clouds are actively\nhandling traffic simultaneously. While this approach ensures that everything remains operational in each location, it also introduces its own set of challenges.\nBalancing the benefits of simultaneous activity with the complexities it brings is a constant consideration in our pursuit of a resilient\nand fault-tolerant system.\nNavigating the multi-region challenges\nHandling traffic in such a manner can undoubtedly impact performance. Each HTTP request from our customers typically involves a set of microservices.\nTo mitigate the challenges of cross-datacenter traffic between these services, we introduced the principle of locality. In simple terms, if an instance of\nmicroservice A needs to communicate with microservice B, we prioritize instances running in the same location or data center.\nHowever, it’s crucial to note that the locality principle faces limitations, especially when it comes to certain storage solutions. For instance,\nmost Relational Database Management Systems (RDBMS) and MongoDB databases only allow writes through a specific node. This means that even if the traffic\nis handled by an instance in DATA CENTER A, it may still be necessary to query a database node in DATA CENTER B to write some data.\nThe challenge lies in finding storage solutions that permit simultaneous writing to nodes in the same location. One such example is\nCouchbase clusters with cross-data center replication, offering a solution to the intricacies of our multi-region, active-active architecture.\nRoots of inconsistency\nAs mentioned earlier, we employ two domains to provide an interface for our customers. In the context of High Availability (HA), this setup implies that\nrendering can be handled by DATA CENTER A, while AJAX communication simultaneously takes place in DATA CENTER B. This dual-domain approach necessitates\na replication mechanism that applies changes made in one data center to the other.\nHowever, a critical challenge arises when the replication mechanism lags behind the Round-Trip Time (RTT) of client requests, as illustrated in\nthe diagram below. The red rectangle in the diagram symbolizes the replication process of a single write operation. If this process takes longer than\nthe back-and-forth exchange of HTTP response and request, the client may receive an invalid view. It’s crucial to note that the second request is directed\nstraight to data center B and is not proxied by DATA CENTER A.\nMitigating this issue, short of radical architectural changes, becomes a significant concern. The intricacies of replication timing are central to ensuring\na seamless and accurate user experience in our multi-data center, active-active architecture.\n\nThe replication lag can be influenced by various factors depending on the storage solutions in use. One undeniable factor is that it cannot be faster than\nthe light distance between data centers. Fortunately, in our case, this distance is minimal, and for the purpose of this story, it can be considered negligible.\nFortunate storage\nAs I mentioned earlier, Couchbase lends itself to adhering to our locality principle in the communication between microservices and databases within\nour architecture. Fortunately, it serves as the storage solution for the microservice responsible for maintaining customers’ preferences. What’s even more\nfortunate is the swift cross-cluster replication mechanism,\nXDCR, employed by Couchbase.\nIn fact, the changes are applied on a cluster in the second data center faster than one Round-Trip Time (RTT) between data centers – pretty cool, isn’t it?\nIt’s noteworthy that XDCR can be configured in either a unidirectional or bidirectional manner. In our case, given active-active writes in all locations,\nwe use a bidirectional configuration to replicate changes, irrespective of the location in which they were applied.\nDeeper analysis: unraveling the replication enigma\nCouchbase offers an abundance of highly detailed metrics regarding the internal state of the cluster. However, without a deep understanding,\nit becomes challenging to decipher whether irregularities or spikes in these metrics may indicate potential problems for customers. This challenge is\nparticularly pronounced when dealing with cross-cluster replication, where overseeing the state of two clusters simultaneously is a complex task.\nAt Allegro, our commitment to meticulous data collection extends to being detailed in gathering performance metrics from a microservice perspective.\nDespite Couchbase providing meaningful information, the story would be incomplete if it solely relied on easily accessible metrics. In reality, these metrics\nfailed to reveal relevant information; read/write times remained relatively stable even during moments when customers reported issues.\nTo gain a deeper understanding of the situation, our approach was clear—gather more data, with a specific focus on replication performance. This strategic\nemphasis on targeted data collection allowed us to delve into the intricacies of the replication process and uncover the underlying factors contributing to\nthe challenges faced by our customers.\nMeasuring replication performance: the birth of cb-tracker\nDue to the lack of readily available tools and our inability to find suitable options, we took matters into our own hands and developed our open-source\ncommand-line tool, cb-tracker. This tool serves the purpose of continuously measuring\nreplication lag. Its functionality revolves around connecting to two Couchbase clusters, designated as A and B, connected via XDCR replication.\nThe primary objective of our tool is to measure the Replication Round-Trip Time (RTT). In simpler terms, it gauges how quickly a document written to cluster A\nbecomes accessible on cluster B, and vice versa. The logic behind this measurement is inspired by the widely used network diagnostic tool ping.\nTo provide a clearer understanding of how this tool performs measurements, refer to the diagram below.\n\nWith the deployment of such a tool, we initiated continuous replication monitoring in the Couchbase bucket used by the microservice responsible for managing\ncustomer preferences. This monitoring effort provided us with valuable insights into the cyclic spikes in replication time. As depicted in the diagram below,\nwe observed two spikes recurring every hour, about 20 minutes apart. This observation prompted us to investigate potential periodic tasks\nwithin Couchbase that might be contributing to this cyclic behavior.\n\nThere are my knobs: unraveling couchbase quirks\nWhile we’ve extolled the virtues of Couchbase, every solution has its quirks, and as the saying goes, the devil is in the details… and defaults :).\nIn our case, the intricacy arose from the documents stored in the scrutinized bucket, each having a set Time-To-Live (TTL).\nThe implementation of TTL on the Couchbase side is quite intriguing — expired documents are not deleted immediately; instead, they are skipped by\nthe fetching logic. This situation could potentially last indefinitely, leading to storage consumption concerns.\nTo handle expired documents, Couchbase triggers a dedicated process every 60 minutes; the interval is controlled by exp_pager_stime parameter.\nEach run flushes out these expired documents from storage. However, an additional default setting — specifically,\nthe flag filterExpiration indicating that\neach flush should be replicated via XDCR — created an unintended consequence. This default behavior caused a significant influx of events every hour,\noverwhelming XDCR. Consequently, other events, such as changes made by the microservice, had to be queued.\nUnderstanding that this mechanism operates on each cluster and that every expired document would eventually be deleted,\nwe recognized the need to address this overload of the replication mechanism. To rectify this, we adjusted the mentioned flag and increased the frequency\nof cleaning expired documents. Following this optimization, we observed a notable improvement, with no further instances of replication spikes.\nSummary\nWe grappled with a shortage of effective tools to monitor replication from a client perspective. As we’ve illustrated, pinpointing the genuine root cause of our\nproblem was crucial. I hope that the tool we’ve introduced can also assist you in the ongoing quest for those valuable milliseconds.\nCouchbase offers a comprehensive set of configuration parameters with default settings that might not be optimal for handling high-volume traffic.\nAs demonstrated, there are subtle threats that can undermine the experience of an otherwise speedy replication mechanism like XDCR.\nIt’s worth noting that our narrative is based on the community edition of Couchbase (v6), and it’s unfortunate that XDCR is\nwithdrawn from the open-source\nversion of Couchbase in the next release. I trust that our story can offer insights to help fine-tune your configuration and navigate potential challenges.\nLinks\nCouchbase: advanced replication settings\nCouchbase: flush parameters\ncb-tracker repository","guid":"https://blog.allegro.tech/2024/02/couchbase-expired-docs-tuning.html","categories":["tech","couchbase","replication","performance bottleneck","open source","ttl","metrics"],"isoDate":"2024-02-11T23:00:00.000Z"},{"title":"WCAG 2.2 is here! And what about 3.0?","link":"https://blog.allegro.tech/2024/01/wcag-2-2.html","pubDate":"Wed, 24 Jan 2024 00:00:00 +0100","authors":{"author":[{"name":["Barbara Szott"],"photo":["https://blog.allegro.tech/img/authors/barbara.szott.jpg"],"url":["https://blog.allegro.tech/authors/barbara.szott"]}]},"content":"<p>Ready to turn web accessibility from a headache into a breeze? Join us as we demystify WCAG, explore its latest 2.2 version, and gaze into the future of digital\ninclusivity. Get ready for a journey that’s as enlightening as it is entertaining!</p>\n\n<h2 id=\"what-exactly-is-wcag\">What exactly is WCAG?</h2>\n\n<p>Imagine you are opening a bar and want to invite all your friends there, and you want them to have a great time hanging out at your place. But some of your\nfriends have different disabilities, such as using wheelchairs or having trouble seeing or hearing. You want everyone to have fun, right? Well, WCAG which stands for\nWeb Contents Accessibility Guidelines, is set of rules to make sure Internet is like a bar that everyone can enjoy.</p>\n\n<h2 id=\"four-principles-of-accessibility\">Four principles of accessibility</h2>\n\n<p>The guidelines and Success Criteria are based on four key principles that provide the fundamental basis for anyone to access and use web content. Let me explain\nthem as simply as possible:</p>\n\n<ol>\n  <li><strong>Perceivable (big text and clear pictures)</strong> - everything on a website should be easy to see and understand. Imagine reading a book. Some people need big\nletters, and some might not see well. So, WCAG says websites should have big letters and clear pictures, like a book with large print and colorful\nillustrations,</li>\n  <li><strong>Operable (easy to click and move)</strong> - the user interface and navigation of a website are easy to operate. It means that people should be able to interact\nwith the content using various methods, such as a keyboard or assistive technologies like screen readers. It also encourages predictable and consistent\nnavigation and input methods,</li>\n  <li><strong>Understandable (no confusing stuff)</strong> - ever been on a website and got lost because it was too complicated? WCAG says websites should be like a\nstraightforward treasure hunt, not a confusing maze. They should have clear instructions and be easy to understand, just like a fun treasure hunt game with\nsimple clues,</li>\n  <li><strong>Robust (works everywhere)</strong> - robustness means that websites should be built to last and work well with different technologies. This ensures that websites\nremain accessible as technology evolves. It’s like building a house with strong foundations so that it stands the test of time.</li>\n</ol>\n\n<p>In essence, WCAG is like a set of rules and recommendations to make the Internet a welcoming and usable place for everyone, regardless of their abilities or\ndisabilities. It’s about creating a digital world that is inclusive and user-friendly for all.</p>\n\n<p>WCAG guidelines are organized into three levels of conformance:</p>\n\n<ol>\n  <li>A - addressing the most critical issues to ensure a minimal level of accessibility</li>\n  <li>AA - covers a broader range of requirements; the website is more accessible and user-friendly</li>\n  <li>AAA - ensures the highest level of accessibility</li>\n</ol>\n\n<h2 id=\"timeline\">Timeline</h2>\n\n<p>I don’t want to bore you with details, but I think it is good to understand that WCAG is not something new. It’s been around for quite a while!</p>\n\n<ul>\n  <li>1997 - W3C started working on WCAG 1.0</li>\n  <li>1999 - WCAG 1.0 shipped</li>\n  <li>2001-2007 - WCAG 2.0</li>\n  <li>2017-2018 - WCAG 2.1</li>\n  <li>2020 - W3C started working on WCAG 2.2</li>\n  <li>2023 - WCAG 2.2</li>\n</ul>\n\n<h2 id=\"wcag-22\">WCAG 2.2</h2>\n\n<p><a href=\"https://www.w3.org/TR/WCAG22/\">The new version</a> introduces 9 new success criteria (SC) - two at level A, four at level AA, and three at AAA. Let’s give them a closer look.</p>\n\n<h3 id=\"2411-a--2412-aa---stop-hiding-my-focus\">2.4.11 (A) &amp; 2.4.12 (AA) - “Stop hiding my focus!”</h3>\n\n<p>I think we can all agree here - it is just annoying if you are browsing the web and all of a sudden something appears - a modal, cookie banner, chat\nwidget, and covers what we were just reading.</p>\n\n<p>So make sure the focus is not obscured. It also applies to submenus and sticky headers.</p>\n\n<p>For A and AA levels focused user interface component should be at least partially visible; for AAA it must be fully visible.</p>\n\n<h3 id=\"257-aa---aaargh-i-cant-do-this-drag--drop-thing-i-need-another-way-to-do-this\">2.5.7 (AA) - “Aaargh! I can’t do this drag &amp; drop thing! I need another way to do this..!”</h3>\n\n<p>If a feature on a website or app can be used by moving your cursor or finger in a dragging motion (like when you click and drag a slider), it should also be\npossible to use that feature without dragging.</p>\n\n<p>This helps people with mobility difficulties, especially when it might be difficult for them to press and hold down and precisely control their movement.</p>\n\n<h3 id=\"258-aa---i-need-these-buttons-to-be-big-enough-that-im-sure-i-will-press-the-right-one\">2.5.8 (AA) - “I need these buttons to be big enough that I’m sure I will press the right one”</h3>\n\n<p>The size of the target for pointer inputs should be at least 24 by 24 CSS pixels.</p>\n\n<p>This comes along with criterion 2.5.5 introduced in WCAG 2.1 (<a href=\"https://www.w3.org/WAI/WCAG21/Understanding/target-size.html\">minimum target size</a>) - this is still valid, but it’s AAA level.</p>\n\n<p>Buttons that are too small or too close to each other are a common problem for people with mobility issues. It’s difficult to interact with the right one. This\nrule is not the same as the AAA success rule, which says that things you click on need to be big enough to easily click on. This rule is about making sure that\nthings you click on are either naturally big enough or spaced far enough apart from other things, so you don’t accidentally click on the wrong thing. The worst\nthing here that can happen is that you accidentally submit something you didn’t want to!</p>\n\n<p>How about links that are stacked on top of each other or small images adjacent to each other? How can we make them fulfill SC 2.5.8?</p>\n\n<p>Let’s use an imaginary 24px diameter circle. If you draw this circle in the center of your link - if that imaginary circle doesn’t intersect another target or\nanother imaginary circle from a small target, then the link is sufficiently spaced.</p>\n\n<p><img src=\"/img/articles/2024-01-24-wcag-2-2/imaginary-circles.png\" alt=\"\" class=\"small-image\" /></p>\n\n<p>Just as many other success criteria, there are exceptions, and the most important for us are:</p>\n<ul>\n  <li>links in text,</li>\n  <li>user-agent controls - as we do not always control what the browser provides. Common examples are select elements (checkboxes, date pickers, etc.); note, that\nthis rule does apply to these structures if you are building them by yourself,</li>\n  <li>essential elements - when things just have to be close to each other; an example of this is a map.</li>\n</ul>\n\n<h2 id=\"2413-aaa---wh-where-is-my-keyboard-focus-\">2.4.13 (AAA) - “Wh… Where is my keyboard focus..? :(”</h2>\n\n<p>Although it is AAA level, it was hoped and tried to have the success criterion at AA.</p>\n\n<p>Focus helps people who rely on keyboard navigation - not only people who are using some assistive technologies but also power users (curb-cut effect again!). The\nfocus indicator must be visible, with good contrast and size:</p>\n<ul>\n  <li>contrast ratio must be at least 3:1 between the same pixels in the focused and unfocused states,</li>\n  <li>size needs to be at least the area of a 2px thick perimeter on the unfocused components.</li>\n</ul>\n\n<p>The following 4 criteria are meant to improve <strong>cognitive accessibility</strong>.</p>\n\n<h2 id=\"326-a---i-need-help-but-i-have-no-idea-how-to-find-it\">3.2.6 (A) - “I need help but I have no idea how to find it!”</h2>\n\n<p>This criterion does not require that help be provided. But if it is - it should be easy to find and its placement should be consistent among multiple screens\n(for example: always in the same place in the footer). The help section location may change as the viewport size changes, but it must be consistent across pages at the\nsame viewport size.</p>\n\n<h2 id=\"337-a---ive-just-told-you-that-why-do-i-have-to-repeat-myself\">3.3.7 (A) - “I’ve just told you that, why do I have to repeat myself?”</h2>\n\n<p>Do not require people to enter the same information more than once during a process. It makes it easier for people with cognitive disabilities to avoid errors\nand finish a multi-step task by not making them repeat information they’ve already entered in one step when they move on to the next step.</p>\n\n<p>Let’s think of a very common example - filling shipping address and billing address. In many cases they are exactly the same - so why should the user provide\nthe same information twice? Good practice here is to provide a simple checkbox “same as shipping address”.</p>\n\n<p>Another example is to give the possibility to select previously provided information - for example, you can save in your account settings a few addresses, and\nafter purchase, you can just select an option instead of reentering all the data.</p>\n\n<p>There are a few exceptions:</p>\n<ul>\n  <li>reentering information is <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/redundant-entry#dfn-essential\">essential</a>,</li>\n  <li>security reasons (when you have to reenter your password),</li>\n  <li>previously provided information may no longer be valid (for example some government sites may force you to fill form with crucial data once in a while)</li>\n</ul>\n\n<h2 id=\"338-aa--339-aaa---accessible-authentication\">3.3.8 (AA) &amp; 3.3.9 (AAA) - Accessible authentication</h2>\n\n<p>Accessible authentication requires that there is a path to authenticate that doesn’t rely on cognitive function tests such as memorization, transcription, or\nsolving puzzles. This requirement will help people with cognitive disabilities including memory, dyslexia, dyscalculia… but not only (check these <a href=\"https://www.boredpanda.com/captcha-struggles-fails/\">captcha struggles fails</a>).</p>\n\n<p>AA allows CAPTCHAs that use recognizing common objects such as “select all the pictures that include dogs” but the AAA success criterion does not allow for that.</p>\n\n<h2 id=\"the-future-of-wcag\">The future of WCAG</h2>\n<p>Currently, a task force is working on WCAG 2.x maintenance, addressing issues (there are over 600 of them opened on <a href=\"https://github.com/w3c/wcag/issues\">GitHub</a>).\nWCAG 2.2 will be around for awhile, and WCAG 3.0 is still years away from becoming a recommendation (…and that will be a very long transition).</p>\n\n<p>It’s 2023, and WCAG 2.0 was shipped in 2001 - the world changed a lot during these years and technology evolved rapidly. WCAG 3.0 (“Silver”) aims to fill gaps,\nreflect real-world accessibility, and prioritize issues more effectively. Research began in 2016, and in 2021 the first draft was shown - but it is still very\nraw (check <a href=\"https://www.w3.org/WAI/GL/task-forces/silver/wiki/Major_Milestones_for_Silver\">major milestones for Silver</a>).</p>\n\n<p>In conclusion, WCAG remains a vital framework for ensuring digital accessibility and empowering individuals with disabilities to fully engage with online\ncontent. The introduction of new criteria in WCAG 2.2 signifies a commitment to continually improving and expanding accessibility guidelines to meet the diverse\nneeds of users. As we look to the future of WCAG, with the development of WCAG 3.0 on the horizon, it is clear that accessibility is not just an evolving field\nbut a transformative one. The journey towards a more inclusive digital landscape may be ongoing, but it is driven by a shared dedication to ensuring that the\nweb is a place where everyone can participate, regardless of their abilities. Embracing these evolving standards and fostering a culture of accessibility will\nnot only benefit individuals with disabilities but will ultimately create a more equitable and accessible online world for all.</p>\n","contentSnippet":"Ready to turn web accessibility from a headache into a breeze? Join us as we demystify WCAG, explore its latest 2.2 version, and gaze into the future of digital\ninclusivity. Get ready for a journey that’s as enlightening as it is entertaining!\nWhat exactly is WCAG?\nImagine you are opening a bar and want to invite all your friends there, and you want them to have a great time hanging out at your place. But some of your\nfriends have different disabilities, such as using wheelchairs or having trouble seeing or hearing. You want everyone to have fun, right? Well, WCAG which stands for\nWeb Contents Accessibility Guidelines, is set of rules to make sure Internet is like a bar that everyone can enjoy.\nFour principles of accessibility\nThe guidelines and Success Criteria are based on four key principles that provide the fundamental basis for anyone to access and use web content. Let me explain\nthem as simply as possible:\nPerceivable (big text and clear pictures) - everything on a website should be easy to see and understand. Imagine reading a book. Some people need big\nletters, and some might not see well. So, WCAG says websites should have big letters and clear pictures, like a book with large print and colorful\nillustrations,\nOperable (easy to click and move) - the user interface and navigation of a website are easy to operate. It means that people should be able to interact\nwith the content using various methods, such as a keyboard or assistive technologies like screen readers. It also encourages predictable and consistent\nnavigation and input methods,\nUnderstandable (no confusing stuff) - ever been on a website and got lost because it was too complicated? WCAG says websites should be like a\nstraightforward treasure hunt, not a confusing maze. They should have clear instructions and be easy to understand, just like a fun treasure hunt game with\nsimple clues,\nRobust (works everywhere) - robustness means that websites should be built to last and work well with different technologies. This ensures that websites\nremain accessible as technology evolves. It’s like building a house with strong foundations so that it stands the test of time.\nIn essence, WCAG is like a set of rules and recommendations to make the Internet a welcoming and usable place for everyone, regardless of their abilities or\ndisabilities. It’s about creating a digital world that is inclusive and user-friendly for all.\nWCAG guidelines are organized into three levels of conformance:\nA - addressing the most critical issues to ensure a minimal level of accessibility\nAA - covers a broader range of requirements; the website is more accessible and user-friendly\nAAA - ensures the highest level of accessibility\nTimeline\nI don’t want to bore you with details, but I think it is good to understand that WCAG is not something new. It’s been around for quite a while!\n1997 - W3C started working on WCAG 1.0\n1999 - WCAG 1.0 shipped\n2001-2007 - WCAG 2.0\n2017-2018 - WCAG 2.1\n2020 - W3C started working on WCAG 2.2\n2023 - WCAG 2.2\nWCAG 2.2\nThe new version introduces 9 new success criteria (SC) - two at level A, four at level AA, and three at AAA. Let’s give them a closer look.\n2.4.11 (A) & 2.4.12 (AA) - “Stop hiding my focus!”\nI think we can all agree here - it is just annoying if you are browsing the web and all of a sudden something appears - a modal, cookie banner, chat\nwidget, and covers what we were just reading.\nSo make sure the focus is not obscured. It also applies to submenus and sticky headers.\nFor A and AA levels focused user interface component should be at least partially visible; for AAA it must be fully visible.\n2.5.7 (AA) - “Aaargh! I can’t do this drag & drop thing! I need another way to do this..!”\nIf a feature on a website or app can be used by moving your cursor or finger in a dragging motion (like when you click and drag a slider), it should also be\npossible to use that feature without dragging.\nThis helps people with mobility difficulties, especially when it might be difficult for them to press and hold down and precisely control their movement.\n2.5.8 (AA) - “I need these buttons to be big enough that I’m sure I will press the right one”\nThe size of the target for pointer inputs should be at least 24 by 24 CSS pixels.\nThis comes along with criterion 2.5.5 introduced in WCAG 2.1 (minimum target size) - this is still valid, but it’s AAA level.\nButtons that are too small or too close to each other are a common problem for people with mobility issues. It’s difficult to interact with the right one. This\nrule is not the same as the AAA success rule, which says that things you click on need to be big enough to easily click on. This rule is about making sure that\nthings you click on are either naturally big enough or spaced far enough apart from other things, so you don’t accidentally click on the wrong thing. The worst\nthing here that can happen is that you accidentally submit something you didn’t want to!\nHow about links that are stacked on top of each other or small images adjacent to each other? How can we make them fulfill SC 2.5.8?\nLet’s use an imaginary 24px diameter circle. If you draw this circle in the center of your link - if that imaginary circle doesn’t intersect another target or\nanother imaginary circle from a small target, then the link is sufficiently spaced.\n\nJust as many other success criteria, there are exceptions, and the most important for us are:\nlinks in text,\nuser-agent controls - as we do not always control what the browser provides. Common examples are select elements (checkboxes, date pickers, etc.); note, that\nthis rule does apply to these structures if you are building them by yourself,\nessential elements - when things just have to be close to each other; an example of this is a map.\n2.4.13 (AAA) - “Wh… Where is my keyboard focus..? :(”\nAlthough it is AAA level, it was hoped and tried to have the success criterion at AA.\nFocus helps people who rely on keyboard navigation - not only people who are using some assistive technologies but also power users (curb-cut effect again!). The\nfocus indicator must be visible, with good contrast and size:\ncontrast ratio must be at least 3:1 between the same pixels in the focused and unfocused states,\nsize needs to be at least the area of a 2px thick perimeter on the unfocused components.\nThe following 4 criteria are meant to improve cognitive accessibility.\n3.2.6 (A) - “I need help but I have no idea how to find it!”\nThis criterion does not require that help be provided. But if it is - it should be easy to find and its placement should be consistent among multiple screens\n(for example: always in the same place in the footer). The help section location may change as the viewport size changes, but it must be consistent across pages at the\nsame viewport size.\n3.3.7 (A) - “I’ve just told you that, why do I have to repeat myself?”\nDo not require people to enter the same information more than once during a process. It makes it easier for people with cognitive disabilities to avoid errors\nand finish a multi-step task by not making them repeat information they’ve already entered in one step when they move on to the next step.\nLet’s think of a very common example - filling shipping address and billing address. In many cases they are exactly the same - so why should the user provide\nthe same information twice? Good practice here is to provide a simple checkbox “same as shipping address”.\nAnother example is to give the possibility to select previously provided information - for example, you can save in your account settings a few addresses, and\nafter purchase, you can just select an option instead of reentering all the data.\nThere are a few exceptions:\nreentering information is essential,\nsecurity reasons (when you have to reenter your password),\npreviously provided information may no longer be valid (for example some government sites may force you to fill form with crucial data once in a while)\n3.3.8 (AA) & 3.3.9 (AAA) - Accessible authentication\nAccessible authentication requires that there is a path to authenticate that doesn’t rely on cognitive function tests such as memorization, transcription, or\nsolving puzzles. This requirement will help people with cognitive disabilities including memory, dyslexia, dyscalculia… but not only (check these captcha struggles fails).\nAA allows CAPTCHAs that use recognizing common objects such as “select all the pictures that include dogs” but the AAA success criterion does not allow for that.\nThe future of WCAG\nCurrently, a task force is working on WCAG 2.x maintenance, addressing issues (there are over 600 of them opened on GitHub).\nWCAG 2.2 will be around for awhile, and WCAG 3.0 is still years away from becoming a recommendation (…and that will be a very long transition).\nIt’s 2023, and WCAG 2.0 was shipped in 2001 - the world changed a lot during these years and technology evolved rapidly. WCAG 3.0 (“Silver”) aims to fill gaps,\nreflect real-world accessibility, and prioritize issues more effectively. Research began in 2016, and in 2021 the first draft was shown - but it is still very\nraw (check major milestones for Silver).\nIn conclusion, WCAG remains a vital framework for ensuring digital accessibility and empowering individuals with disabilities to fully engage with online\ncontent. The introduction of new criteria in WCAG 2.2 signifies a commitment to continually improving and expanding accessibility guidelines to meet the diverse\nneeds of users. As we look to the future of WCAG, with the development of WCAG 3.0 on the horizon, it is clear that accessibility is not just an evolving field\nbut a transformative one. The journey towards a more inclusive digital landscape may be ongoing, but it is driven by a shared dedication to ensuring that the\nweb is a place where everyone can participate, regardless of their abilities. Embracing these evolving standards and fostering a culture of accessibility will\nnot only benefit individuals with disabilities but will ultimately create a more equitable and accessible online world for all.","guid":"https://blog.allegro.tech/2024/01/wcag-2-2.html","categories":["tech","accessibility","a11y","wcag"],"isoDate":"2024-01-23T23:00:00.000Z"},{"title":"Embed multicolor icons using a single DOM element","link":"https://blog.allegro.tech/2024/01/embed-multicolor-icons-using-a-single-DOM-element.html","pubDate":"Wed, 10 Jan 2024 00:00:00 +0100","authors":{"author":[{"name":["Paweł Lesiecki"],"photo":["https://blog.allegro.tech/img/authors/pawel.lesiecki.jpg"],"url":["https://blog.allegro.tech/authors/pawel.lesiecki"]},{"name":["Maciej Suszko"],"photo":["https://blog.allegro.tech/img/authors/maciej.suszko.jpg"],"url":["https://blog.allegro.tech/authors/maciej.suszko"]}]},"content":"<p>Hello, fellow Web developers!</p>\n\n<p>Icons are an integral part of most modern UIs.\nWhat is the best way to embed icons nowadays?\nThis area is full of pitfalls.\nYou better proceed with caution when trying to answer that question.</p>\n\n<p>Though there are many possibilities, <a href=\"https://twitter.com/_developit/status/1382838799420514317\">some of which are considered harmful</a>.\nVarious inline SVG techniques have become more popular over time. Possibly due to the lack of suitable alternatives, although not using the cache is a huge trade-off.\nThankfully, <a href=\"https://twitter.com/getifyX/status/1720810762409566459\">there are some voices of reason</a> in the community.</p>\n\n<p>At <a href=\"https://allegro.tech/\">Allegro</a>, we’ve been using SVG and CSS filters for quite some time.\nHowever, they have their limits and could be better suited for the challenges of the themeable design system.</p>\n\n<p>Let’s pause for a moment and rethink the approach to icons.\nIt has to meet several requirements:</p>\n<ul>\n  <li>themeable,</li>\n  <li>cacheable,</li>\n  <li>easily embeddable.</li>\n</ul>\n\n<h2 id=\"can-we-do-better-than-weve-been-doing-so-far\">Can we do better than we’ve been doing so far?</h2>\n\n<p><img src=\"/img/articles/2024-01-10-embed-multicolor-icons-using-a-single-DOM-element/icon.webp\" alt=\"Multilayer icon\" title=\"Multilayer icon\" /></p>\n\n<p>All the tools needed to perform the trick have been available in major browsers for at least few years.\nIs it possible everyone just failed to connect the dots?\nIt turns out that the platform is capable of dealing with icons more efficiently.</p>\n\n<p><strong>Let us introduce the SVG+CSS technique. It lets you have a 3-color icon using just one DOM element and one external SVG.</strong></p>\n\n<p>We have found nothing similar, whether online or with ChatGPT, which makes us want to share this idea with you even more.</p>\n\n<p>Consider the proposed technique if you care about performance.</p>\n\n<h3 id=\"key-benefits-are\">Key benefits are:</h3>\n\n<ol>\n  <li>Caching.</li>\n  <li>Works cross-domain.</li>\n  <li>Customizable more than a single color.</li>\n  <li>Icons load after critical resources and content, not bloating the markup.</li>\n</ol>\n\n<p>We will control the colors of 3 different parts with a single DOM element and SVG resource.</p>\n\n<p>Sounds interesting? Then, let’s dive into how we can accomplish this.</p>\n\n<h2 id=\"implementation\">Implementation</h2>\n\n<p>SVG and CSS are gifts that keep giving and can do wonders combined.</p>\n\n<p>The proposed technique is a combination of two platform capabilities.</p>\n<ol>\n  <li><a href=\"https://css-tricks.com/svg-fragment-identifiers-work/\">SVG Fragments</a></li>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-image\">CSS Masks</a></li>\n</ol>\n\n<p><a href=\"https://caniuse.com/svg-fragment\">SVG Fragments aren’t really a new technology</a>.\nAbout five years ago, we considered using CSS masks, but we still supported IE back then.\nAt that time, we had not yet thought of combining it with fragments.</p>\n\n<p>As a case study let’s pick one of our icons —\n<img class=\"inline-image\" alt=\"a-icon\" src=\"https://a.allegroimg.com/original/34412f/ae71613e49d986c5c838698e2e86/illustration-allegro-in-circle-big-db0c91e439\" />.</p>\n\n<p>With the following source:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;svg</span> <span class=\"na\">viewBox=</span><span class=\"s\">\"0 0 32 32\"</span> <span class=\"na\">fill=</span><span class=\"s\">\"none\"</span> <span class=\"na\">height=</span><span class=\"s\">\"32\"</span> <span class=\"na\">width=</span><span class=\"s\">\"32\"</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/2000/svg\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;path</span> <span class=\"na\">d=</span><span class=\"s\">\"...\"</span> <span class=\"na\">fill=</span><span class=\"s\">\"#B0B8BC\"</span><span class=\"nt\">&gt;&lt;/path&gt;</span>\n  <span class=\"nt\">&lt;path</span> <span class=\"na\">clip-rule=</span><span class=\"s\">\"evenodd\"</span> <span class=\"na\">d=</span><span class=\"s\">\"...\"</span> <span class=\"na\">fill-rule=</span><span class=\"s\">\"evenodd\"</span> <span class=\"na\">fill=</span><span class=\"s\">\"#FF7B33\"</span><span class=\"nt\">&gt;&lt;/path&gt;</span>\n  <span class=\"nt\">&lt;path</span> <span class=\"na\">d=</span><span class=\"s\">\"...\"</span> <span class=\"na\">fill=</span><span class=\"s\">\"#D9DFE4\"</span><span class=\"nt\">&gt;&lt;/path&gt;</span>\n<span class=\"nt\">&lt;/svg&gt;</span>\n</code></pre></div></div>\n\n<p>This particular icon consists of 3 parts, each with a different color.\nNow, we’re going to control these colors with the document’s CSS.</p>\n\n<p>It’s time to program in SVG and CSS for a moment.</p>\n\n<h3 id=\"step-1--svg-fragments\">Step #1 — SVG Fragments</h3>\n\n<p>First, let’s craft our test subject and introduce the fragments.\nEach <code class=\"language-plaintext highlighter-rouge\">path</code> gets a unique Fragment Identifier by setting an <code class=\"language-plaintext highlighter-rouge\">id</code> attribute.\nNext, we add a little CSS to enable rendering fragments in isolation. Think of it as an image sprite.</p>\n\n<p>For the sake of CSS simplicity, we also group all the paths under an extra <code class=\"language-plaintext highlighter-rouge\">g</code> element with a unique <code class=\"language-plaintext highlighter-rouge\">id</code>.</p>\n\n<p>As a result, the SVG is supposed to look like this:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;svg</span> <span class=\"na\">viewBox=</span><span class=\"s\">\"0 0 32 32\"</span> <span class=\"na\">fill=</span><span class=\"s\">\"none\"</span> <span class=\"na\">height=</span><span class=\"s\">\"32\"</span> <span class=\"na\">width=</span><span class=\"s\">\"32\"</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/2000/svg\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;style&gt;</span>\n    <span class=\"nt\">path</span><span class=\"nd\">:not</span><span class=\"o\">(</span><span class=\"nd\">:target</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n      <span class=\"nl\">display</span><span class=\"p\">:</span> <span class=\"nb\">none</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"nt\">g</span><span class=\"nd\">:target</span> <span class=\"nt\">path</span> <span class=\"p\">{</span>\n      <span class=\"nl\">display</span><span class=\"p\">:</span> <span class=\"nb\">inline</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;g</span> <span class=\"na\">id=</span><span class=\"s\">\"icon\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;path</span> <span class=\"na\">id=</span><span class=\"s\">\"border\"</span> <span class=\"na\">d=</span><span class=\"s\">\"...\"</span> <span class=\"na\">fill=</span><span class=\"s\">\"#B0B8BC\"</span><span class=\"nt\">&gt;&lt;/path&gt;</span>\n    <span class=\"nt\">&lt;path</span> <span class=\"na\">id=</span><span class=\"s\">\"a\"</span> <span class=\"na\">clip-rule=</span><span class=\"s\">\"evenodd\"</span> <span class=\"na\">d=</span><span class=\"s\">\"...\"</span> <span class=\"na\">fill-rule=</span><span class=\"s\">\"evenodd\"</span> <span class=\"na\">fill=</span><span class=\"s\">\"#FF7B33\"</span><span class=\"nt\">&gt;&lt;/path&gt;</span>\n    <span class=\"nt\">&lt;path</span> <span class=\"na\">id=</span><span class=\"s\">\"shadow\"</span> <span class=\"na\">d=</span><span class=\"s\">\"...\"</span> <span class=\"na\">fill=</span><span class=\"s\">\"#D9DFE4\"</span><span class=\"nt\">&gt;&lt;/path&gt;</span>\n  <span class=\"nt\">&lt;/g&gt;</span>\n<span class=\"nt\">&lt;/svg&gt;</span>\n</code></pre></div></div>\n\n<p>It produces 4 fragments, one for each of the three paths and the last for the whole icon. Each of them can now be rendered as a separate image:</p>\n\n<ol>\n  <li><a href=\"https://a.allegroimg.com/original/34901c/db3b33c5488eb13bc5244e215953/illustration-allegro-in-circle-big-ab3336c0b3#a\"><code class=\"language-plaintext highlighter-rouge\">#a</code></a> — <img class=\"inline-image\" alt=\"#a\" src=\"https://a.allegroimg.com/original/34901c/db3b33c5488eb13bc5244e215953/illustration-allegro-in-circle-big-ab3336c0b3#a\" /></li>\n  <li><a href=\"https://a.allegroimg.com/original/34901c/db3b33c5488eb13bc5244e215953/illustration-allegro-in-circle-big-ab3336c0b3#border\"><code class=\"language-plaintext highlighter-rouge\">#border</code></a> — <img class=\"inline-image\" alt=\"#border\" src=\"https://a.allegroimg.com/original/34901c/db3b33c5488eb13bc5244e215953/illustration-allegro-in-circle-big-ab3336c0b3#border\" /></li>\n  <li><a href=\"https://a.allegroimg.com/original/34901c/db3b33c5488eb13bc5244e215953/illustration-allegro-in-circle-big-ab3336c0b3#shadow\"><code class=\"language-plaintext highlighter-rouge\">#shadow</code></a> — <img class=\"inline-image\" alt=\"#shadow\" src=\"https://a.allegroimg.com/original/34901c/db3b33c5488eb13bc5244e215953/illustration-allegro-in-circle-big-ab3336c0b3#shadow\" /></li>\n  <li><a href=\"https://a.allegroimg.com/original/34901c/db3b33c5488eb13bc5244e215953/illustration-allegro-in-circle-big-ab3336c0b3#icon\"><code class=\"language-plaintext highlighter-rouge\">#icon</code></a> — <img class=\"inline-image\" alt=\"#icon\" src=\"https://a.allegroimg.com/original/34901c/db3b33c5488eb13bc5244e215953/illustration-allegro-in-circle-big-ab3336c0b3#icon\" /></li>\n</ol>\n\n<p>Now, the regular fragment-less URL will display a blank image.\nThus, for the full icon, we’re going to add a <a href=\"https://a.allegroimg.com/original/34c91a/651290b94002acbe836ae520e8ff/illustration-allegro-in-circle-big-ab3336c0b3#icon\"><code class=\"language-plaintext highlighter-rouge\">#icon</code></a> fragment to the URL.</p>\n\n<p>We won’t use the <code class=\"language-plaintext highlighter-rouge\">#a</code> fragment, but let’s keep its identifier.</p>\n\n<h3 id=\"step-2--css-masks\">Step #2 — CSS Masks</h3>\n\n<p>With SVG Fragment Identifiers up and ready, we can use CSS Masks.</p>\n\n<p>The base class <code class=\"language-plaintext highlighter-rouge\">.icon</code> stacks three layers on top of each other, ready for a mask.</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">.icon</span> <span class=\"p\">{</span>\n  <span class=\"nl\">position</span><span class=\"p\">:</span> <span class=\"nb\">relative</span><span class=\"p\">;</span>\n  <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">32px</span><span class=\"p\">;</span>\n  <span class=\"nl\">height</span><span class=\"p\">:</span> <span class=\"m\">32px</span><span class=\"p\">;</span>\n  <span class=\"py\">mask-repeat</span><span class=\"p\">:</span> <span class=\"nb\">no-repeat</span><span class=\"p\">;</span>\n  <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"n\">currentColor</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.icon</span><span class=\"nd\">::before</span><span class=\"o\">,</span>\n<span class=\"nc\">.icon</span><span class=\"nd\">::after</span> <span class=\"p\">{</span>\n  <span class=\"nl\">content</span><span class=\"p\">:</span> <span class=\"s2\">''</span><span class=\"p\">;</span>\n  <span class=\"nl\">position</span><span class=\"p\">:</span> <span class=\"nb\">absolute</span><span class=\"p\">;</span>\n  <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"nb\">inherit</span><span class=\"p\">;</span>\n  <span class=\"nl\">height</span><span class=\"p\">:</span> <span class=\"nb\">inherit</span><span class=\"p\">;</span>\n  <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"nb\">inherit</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>The last CSS class is for our specific icon.</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">.icon--a</span> <span class=\"p\">{</span>\n  <span class=\"py\">mask-image</span><span class=\"p\">:</span> <span class=\"sx\">url('./a.svg#icon')</span><span class=\"p\">;</span> <span class=\"c\">/* full icon’s shape */</span>\n  <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"m\">#FF7B33</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.icon--a</span><span class=\"nd\">::before</span> <span class=\"p\">{</span>\n  <span class=\"py\">mask-image</span><span class=\"p\">:</span> <span class=\"sx\">url('./a.svg#shadow')</span><span class=\"p\">;</span> <span class=\"c\">/* shadow’s shape */</span>\n  <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"m\">#D9DFE4</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.icon--a</span><span class=\"nd\">::after</span> <span class=\"p\">{</span>\n  <span class=\"py\">mask-image</span><span class=\"p\">:</span> <span class=\"sx\">url('./a.svg#border')</span><span class=\"p\">;</span> <span class=\"c\">/* border’s shape */</span>\n  <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"m\">#B0B8BC</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>The critical part is that we picked the whole icon, not any fragment, as the parent’s mask, so we have the entire icon visible.\nThat’s because the parent layer masks its children.</p>\n\n<p>We selected the orange color of the <code class=\"language-plaintext highlighter-rouge\">a</code> for the parent layer.\nThen, we put the two remaining layers on top of it.\nThe second and third layers are for shadow and border parts, respectively.</p>\n\n<p><strong>We can describe this as the whole icon in single color covered by one or more shapes in different colors.</strong></p>\n\n<p>When an icon has intersecting parts, there’s one thing to keep in mind.\nBackgrounds render on top of each other in a particular order:</p>\n<ol>\n  <li>the parent’s background,</li>\n  <li>the <code class=\"language-plaintext highlighter-rouge\">::before</code> pseudo-element’s background,</li>\n  <li>the <code class=\"language-plaintext highlighter-rouge\">::after</code>’s background at the end.</li>\n</ol>\n\n<p>As a result, we can embed the icon by a single element.</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"icon icon--a\"</span> <span class=\"na\">aria-hidden=</span><span class=\"s\">\"true\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n</code></pre></div></div>\n\n<p>Let’s also consider accessibility.\nUsually, icons are <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden#description\">purely decorative content</a>.\nThat’s why we remove them from the accessibility tree by <code class=\"language-plaintext highlighter-rouge\">aria-hidden=\"true\"</code>.</p>\n\n<p>The result is supposed to look like the original icon from the start —\n<img class=\"inline-image\" alt=\"the original icon from the beginning\" src=\"https://a.allegroimg.com/original/34412f/ae71613e49d986c5c838698e2e86/illustration-allegro-in-circle-big-db0c91e439\" />.</p>\n\n<p>Now, the single element gives us control over up to three parts of our icon.\nMoreover, we can change colors independently and dynamically.</p>\n\n<h2 id=\"the-demo\">The demo</h2>\n<p>Feel free to check the <a href=\"https://mpsuszko.github.io/three-colors-one-element-icon/\">demo</a>.</p>\n\n<p>Pretty neat.</p>\n\n<p>We found this technique practical, and we’re keen to use it in the future.</p>\n\n<h2 id=\"more-colors\">More colors</h2>\n<p>If you need more than 3 colors, switch from pseudo-elements to regular elements. Then, you can stack as many layers as you want.\nAnother option is to combine <code class=\"language-plaintext highlighter-rouge\">background-image</code> with gradients instead of <code class=\"language-plaintext highlighter-rouge\">background-color</code>.</p>\n\n<p>Enjoy &amp; use the platform ❤️</p>\n","contentSnippet":"Hello, fellow Web developers!\nIcons are an integral part of most modern UIs.\nWhat is the best way to embed icons nowadays?\nThis area is full of pitfalls.\nYou better proceed with caution when trying to answer that question.\nThough there are many possibilities, some of which are considered harmful.\nVarious inline SVG techniques have become more popular over time. Possibly due to the lack of suitable alternatives, although not using the cache is a huge trade-off.\nThankfully, there are some voices of reason in the community.\nAt Allegro, we’ve been using SVG and CSS filters for quite some time.\nHowever, they have their limits and could be better suited for the challenges of the themeable design system.\nLet’s pause for a moment and rethink the approach to icons.\nIt has to meet several requirements:\nthemeable,\ncacheable,\neasily embeddable.\nCan we do better than we’ve been doing so far?\n\nAll the tools needed to perform the trick have been available in major browsers for at least few years.\nIs it possible everyone just failed to connect the dots?\nIt turns out that the platform is capable of dealing with icons more efficiently.\nLet us introduce the SVG+CSS technique. It lets you have a 3-color icon using just one DOM element and one external SVG.\nWe have found nothing similar, whether online or with ChatGPT, which makes us want to share this idea with you even more.\nConsider the proposed technique if you care about performance.\nKey benefits are:\nCaching.\nWorks cross-domain.\nCustomizable more than a single color.\nIcons load after critical resources and content, not bloating the markup.\nWe will control the colors of 3 different parts with a single DOM element and SVG resource.\nSounds interesting? Then, let’s dive into how we can accomplish this.\nImplementation\nSVG and CSS are gifts that keep giving and can do wonders combined.\nThe proposed technique is a combination of two platform capabilities.\nSVG Fragments\nCSS Masks\nSVG Fragments aren’t really a new technology.\nAbout five years ago, we considered using CSS masks, but we still supported IE back then.\nAt that time, we had not yet thought of combining it with fragments.\nAs a case study let’s pick one of our icons —\n.\nWith the following source:\n\n<svg viewBox=\"0 0 32 32\" fill=\"none\" height=\"32\" width=\"32\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"...\" fill=\"#B0B8BC\"></path>\n  <path clip-rule=\"evenodd\" d=\"...\" fill-rule=\"evenodd\" fill=\"#FF7B33\"></path>\n  <path d=\"...\" fill=\"#D9DFE4\"></path>\n</svg>\n\n\nThis particular icon consists of 3 parts, each with a different color.\nNow, we’re going to control these colors with the document’s CSS.\nIt’s time to program in SVG and CSS for a moment.\nStep #1 — SVG Fragments\nFirst, let’s craft our test subject and introduce the fragments.\nEach path gets a unique Fragment Identifier by setting an id attribute.\nNext, we add a little CSS to enable rendering fragments in isolation. Think of it as an image sprite.\nFor the sake of CSS simplicity, we also group all the paths under an extra g element with a unique id.\nAs a result, the SVG is supposed to look like this:\n\n<svg viewBox=\"0 0 32 32\" fill=\"none\" height=\"32\" width=\"32\" xmlns=\"http://www.w3.org/2000/svg\">\n  <style>\n    path:not(:target) {\n      display: none;\n    }\n    g:target path {\n      display: inline;\n    }\n  </style>\n  <g id=\"icon\">\n    <path id=\"border\" d=\"...\" fill=\"#B0B8BC\"></path>\n    <path id=\"a\" clip-rule=\"evenodd\" d=\"...\" fill-rule=\"evenodd\" fill=\"#FF7B33\"></path>\n    <path id=\"shadow\" d=\"...\" fill=\"#D9DFE4\"></path>\n  </g>\n</svg>\n\n\nIt produces 4 fragments, one for each of the three paths and the last for the whole icon. Each of them can now be rendered as a separate image:\n#a — \n#border — \n#shadow — \n#icon — \nNow, the regular fragment-less URL will display a blank image.\nThus, for the full icon, we’re going to add a #icon fragment to the URL.\nWe won’t use the #a fragment, but let’s keep its identifier.\nStep #2 — CSS Masks\nWith SVG Fragment Identifiers up and ready, we can use CSS Masks.\nThe base class .icon stacks three layers on top of each other, ready for a mask.\n\n.icon {\n  position: relative;\n  width: 32px;\n  height: 32px;\n  mask-repeat: no-repeat;\n  background-color: currentColor;\n}\n.icon::before,\n.icon::after {\n  content: '';\n  position: absolute;\n  width: inherit;\n  height: inherit;\n  background-color: inherit;\n}\n\n\nThe last CSS class is for our specific icon.\n\n.icon--a {\n  mask-image: url('./a.svg#icon'); /* full icon’s shape */\n  color: #FF7B33;\n}\n.icon--a::before {\n  mask-image: url('./a.svg#shadow'); /* shadow’s shape */\n  color: #D9DFE4;\n}\n.icon--a::after {\n  mask-image: url('./a.svg#border'); /* border’s shape */\n  color: #B0B8BC;\n}\n\n\nThe critical part is that we picked the whole icon, not any fragment, as the parent’s mask, so we have the entire icon visible.\nThat’s because the parent layer masks its children.\nWe selected the orange color of the a for the parent layer.\nThen, we put the two remaining layers on top of it.\nThe second and third layers are for shadow and border parts, respectively.\nWe can describe this as the whole icon in single color covered by one or more shapes in different colors.\nWhen an icon has intersecting parts, there’s one thing to keep in mind.\nBackgrounds render on top of each other in a particular order:\nthe parent’s background,\nthe ::before pseudo-element’s background,\nthe ::after’s background at the end.\nAs a result, we can embed the icon by a single element.\n\n<div class=\"icon icon--a\" aria-hidden=\"true\"></div>\n\n\nLet’s also consider accessibility.\nUsually, icons are purely decorative content.\nThat’s why we remove them from the accessibility tree by aria-hidden=\"true\".\nThe result is supposed to look like the original icon from the start —\n.\nNow, the single element gives us control over up to three parts of our icon.\nMoreover, we can change colors independently and dynamically.\nThe demo\nFeel free to check the demo.\nPretty neat.\nWe found this technique practical, and we’re keen to use it in the future.\nMore colors\nIf you need more than 3 colors, switch from pseudo-elements to regular elements. Then, you can stack as many layers as you want.\nAnother option is to combine background-image with gradients instead of background-color.\nEnjoy & use the platform ❤️","guid":"https://blog.allegro.tech/2024/01/embed-multicolor-icons-using-a-single-DOM-element.html","categories":["tech","web","svg","css","html"],"isoDate":"2024-01-09T23:00:00.000Z"}],"jobs":[{"id":"743999967550443","name":"Senior Software Engineer (Java/Kotlin) - Technology Consumer Experience","uuid":"c0630d2d-eaba-42c6-bd2c-48dc4689acb9","jobAdId":"501ba2ce-9d33-4ca7-90b1-e0871f8b6687","defaultJobAd":false,"refNumber":"REF4072X","company":{"identifier":"Allegro","name":"Allegro"},"releasedDate":"2024-02-14T13:42:20.139Z","location":{"city":"Poznań, Warsaw","country":"pl","remote":false},"industry":{"id":"internet","label":"Internet"},"department":{"id":"2572770","label":"IT - Software Development"},"function":{"id":"information_technology","label":"Information Technology"},"typeOfEmployment":{"id":"permanent","label":"Full-time"},"experienceLevel":{"id":"mid_senior_level","label":"Mid-Senior Level"},"customField":[{"fieldId":"61583054f15cea434e0be36f","fieldLabel":"Career Level","valueId":"3c97f53f-19c2-4a25-9eb1-513f9fb38b80","valueLabel":"3-5"},{"fieldId":"61582f70e72a6b6d239c9857","fieldLabel":"Area","valueId":"76599a72-f283-4550-9303-52e2e0eb6e32","valueLabel":"Technology"},{"fieldId":"58c15608e4b01d4b19ddf790","fieldLabel":"Recruitment Process","valueId":"ed4682c7-33c9-41c2-8d13-428ed39046f5","valueLabel":"Tech. Engineer - IC"},{"fieldId":"6406f92e638cbb2f415a94a9","fieldLabel":"Job Area","valueId":"e8731ea4-48a9-476d-ab1d-9a40eb3426f1","valueLabel":"Technology"},{"fieldId":"COUNTRY","fieldLabel":"Country","valueId":"pl","valueLabel":"Poland"},{"fieldId":"58c13159e4b01d4b19ddf729","fieldLabel":"Department","valueId":"2572770","valueLabel":"IT - Software Development"},{"fieldId":"58c13159e4b01d4b19ddf728","fieldLabel":"Brands","valueId":"4ccb4fab-6c3f-4ed0-9140-8533fe17447f","valueLabel":"Allegro sp. z o.o."}],"visibility":"PUBLIC","ref":"https://api.smartrecruiters.com/v1/companies/allegro/postings/743999967550443","language":{"code":"en","label":"English","labelNative":"English (US)"}},{"id":"743999967549418","name":"Software Engineer (Java/Kotlin) - Delivery Experience","uuid":"2010b497-d27d-4623-992d-f6fde7093f4a","jobAdId":"ee69cca3-645d-4080-af3b-1d9a32601d7b","defaultJobAd":false,"refNumber":"REF4072X","company":{"identifier":"Allegro","name":"Allegro"},"releasedDate":"2024-02-14T13:40:57.032Z","location":{"city":"Warszawa, Poznań","country":"pl","remote":false},"industry":{"id":"internet","label":"Internet"},"department":{"id":"2572770","label":"IT - Software Development"},"function":{"id":"information_technology","label":"Information Technology"},"typeOfEmployment":{"id":"permanent","label":"Full-time"},"experienceLevel":{"id":"mid_senior_level","label":"Mid-Senior Level"},"customField":[{"fieldId":"61583054f15cea434e0be36f","fieldLabel":"Career Level","valueId":"3c97f53f-19c2-4a25-9eb1-513f9fb38b80","valueLabel":"3-5"},{"fieldId":"61582f70e72a6b6d239c9857","fieldLabel":"Area","valueId":"76599a72-f283-4550-9303-52e2e0eb6e32","valueLabel":"Technology"},{"fieldId":"58c15608e4b01d4b19ddf790","fieldLabel":"Recruitment Process","valueId":"ed4682c7-33c9-41c2-8d13-428ed39046f5","valueLabel":"Tech. Engineer - IC"},{"fieldId":"6406f92e638cbb2f415a94a9","fieldLabel":"Job Area","valueId":"e8731ea4-48a9-476d-ab1d-9a40eb3426f1","valueLabel":"Technology"},{"fieldId":"COUNTRY","fieldLabel":"Country","valueId":"pl","valueLabel":"Poland"},{"fieldId":"58c13159e4b01d4b19ddf729","fieldLabel":"Department","valueId":"2572770","valueLabel":"IT - Software Development"},{"fieldId":"58c13159e4b01d4b19ddf728","fieldLabel":"Brands","valueId":"4ccb4fab-6c3f-4ed0-9140-8533fe17447f","valueLabel":"Allegro sp. z o.o."}],"visibility":"PUBLIC","ref":"https://api.smartrecruiters.com/v1/companies/allegro/postings/743999967549418","language":{"code":"en","label":"English","labelNative":"English (US)"}},{"id":"743999967548768","name":"Senior Software Engineer (Java/Kotlin) - Merchant Experience","uuid":"19feddfa-21b4-40d3-a0d9-ca712dd51048","jobAdId":"c7b5368b-eb4d-49c6-bd84-47081eba34d8","defaultJobAd":false,"refNumber":"REF4072X","company":{"identifier":"Allegro","name":"Allegro"},"releasedDate":"2024-02-14T13:40:31.868Z","location":{"city":"Poznań, Warsaw","country":"pl","remote":false},"industry":{"id":"internet","label":"Internet"},"department":{"id":"2572770","label":"IT - Software Development"},"function":{"id":"information_technology","label":"Information Technology"},"typeOfEmployment":{"id":"permanent","label":"Full-time"},"experienceLevel":{"id":"mid_senior_level","label":"Mid-Senior Level"},"customField":[{"fieldId":"61583054f15cea434e0be36f","fieldLabel":"Career Level","valueId":"3c97f53f-19c2-4a25-9eb1-513f9fb38b80","valueLabel":"3-5"},{"fieldId":"61582f70e72a6b6d239c9857","fieldLabel":"Area","valueId":"76599a72-f283-4550-9303-52e2e0eb6e32","valueLabel":"Technology"},{"fieldId":"58c15608e4b01d4b19ddf790","fieldLabel":"Recruitment Process","valueId":"ed4682c7-33c9-41c2-8d13-428ed39046f5","valueLabel":"Tech. Engineer - IC"},{"fieldId":"6406f92e638cbb2f415a94a9","fieldLabel":"Job Area","valueId":"e8731ea4-48a9-476d-ab1d-9a40eb3426f1","valueLabel":"Technology"},{"fieldId":"COUNTRY","fieldLabel":"Country","valueId":"pl","valueLabel":"Poland"},{"fieldId":"58c13159e4b01d4b19ddf729","fieldLabel":"Department","valueId":"2572770","valueLabel":"IT - Software Development"},{"fieldId":"58c13159e4b01d4b19ddf728","fieldLabel":"Brands","valueId":"4ccb4fab-6c3f-4ed0-9140-8533fe17447f","valueLabel":"Allegro sp. z o.o."}],"visibility":"PUBLIC","ref":"https://api.smartrecruiters.com/v1/companies/allegro/postings/743999967548768","language":{"code":"en","label":"English","labelNative":"English (US)"}},{"id":"743999967548474","name":"Software Engineer (Java/Kotlin) - Merchant Experience","uuid":"39e08266-86b6-4d37-9f64-584a3adaf471","jobAdId":"0cd4899d-da29-4ed4-b3c5-33e2af744a0c","defaultJobAd":false,"refNumber":"REF4072X","company":{"identifier":"Allegro","name":"Allegro"},"releasedDate":"2024-02-14T13:40:06.376Z","location":{"city":"Poznań, Warsaw","country":"pl","remote":false},"industry":{"id":"internet","label":"Internet"},"department":{"id":"2572770","label":"IT - Software Development"},"function":{"id":"information_technology","label":"Information Technology"},"typeOfEmployment":{"id":"permanent","label":"Full-time"},"experienceLevel":{"id":"mid_senior_level","label":"Mid-Senior Level"},"customField":[{"fieldId":"61583054f15cea434e0be36f","fieldLabel":"Career Level","valueId":"3c97f53f-19c2-4a25-9eb1-513f9fb38b80","valueLabel":"3-5"},{"fieldId":"61582f70e72a6b6d239c9857","fieldLabel":"Area","valueId":"76599a72-f283-4550-9303-52e2e0eb6e32","valueLabel":"Technology"},{"fieldId":"58c15608e4b01d4b19ddf790","fieldLabel":"Recruitment Process","valueId":"ed4682c7-33c9-41c2-8d13-428ed39046f5","valueLabel":"Tech. Engineer - IC"},{"fieldId":"6406f92e638cbb2f415a94a9","fieldLabel":"Job Area","valueId":"e8731ea4-48a9-476d-ab1d-9a40eb3426f1","valueLabel":"Technology"},{"fieldId":"COUNTRY","fieldLabel":"Country","valueId":"pl","valueLabel":"Poland"},{"fieldId":"58c13159e4b01d4b19ddf729","fieldLabel":"Department","valueId":"2572770","valueLabel":"IT - Software Development"},{"fieldId":"58c13159e4b01d4b19ddf728","fieldLabel":"Brands","valueId":"4ccb4fab-6c3f-4ed0-9140-8533fe17447f","valueLabel":"Allegro sp. z o.o."}],"visibility":"PUBLIC","ref":"https://api.smartrecruiters.com/v1/companies/allegro/postings/743999967548474","language":{"code":"en","label":"English","labelNative":"English (US)"}},{"id":"743999967549753","name":"Software Engineer (Java/Kotlin) - Technology Consumer Experience","uuid":"a787ef16-eed7-4097-9fc3-61faecbfe661","jobAdId":"15892c55-579d-4911-9c07-6792da040005","defaultJobAd":false,"refNumber":"REF4072X","company":{"identifier":"Allegro","name":"Allegro"},"releasedDate":"2024-02-14T13:39:01.272Z","location":{"city":"Poznań, Warsaw","country":"pl","remote":false},"industry":{"id":"internet","label":"Internet"},"department":{"id":"2572770","label":"IT - Software Development"},"function":{"id":"information_technology","label":"Information Technology"},"typeOfEmployment":{"id":"permanent","label":"Full-time"},"experienceLevel":{"id":"mid_senior_level","label":"Mid-Senior Level"},"customField":[{"fieldId":"61583054f15cea434e0be36f","fieldLabel":"Career Level","valueId":"3c97f53f-19c2-4a25-9eb1-513f9fb38b80","valueLabel":"3-5"},{"fieldId":"61582f70e72a6b6d239c9857","fieldLabel":"Area","valueId":"76599a72-f283-4550-9303-52e2e0eb6e32","valueLabel":"Technology"},{"fieldId":"58c15608e4b01d4b19ddf790","fieldLabel":"Recruitment Process","valueId":"ed4682c7-33c9-41c2-8d13-428ed39046f5","valueLabel":"Tech. Engineer - IC"},{"fieldId":"6406f92e638cbb2f415a94a9","fieldLabel":"Job Area","valueId":"e8731ea4-48a9-476d-ab1d-9a40eb3426f1","valueLabel":"Technology"},{"fieldId":"COUNTRY","fieldLabel":"Country","valueId":"pl","valueLabel":"Poland"},{"fieldId":"58c13159e4b01d4b19ddf729","fieldLabel":"Department","valueId":"2572770","valueLabel":"IT - Software Development"},{"fieldId":"58c13159e4b01d4b19ddf728","fieldLabel":"Brands","valueId":"4ccb4fab-6c3f-4ed0-9140-8533fe17447f","valueLabel":"Allegro sp. z o.o."}],"visibility":"PUBLIC","ref":"https://api.smartrecruiters.com/v1/companies/allegro/postings/743999967549753","language":{"code":"en","label":"English","labelNative":"English (US)"}}],"events":[{"created":1702979844000,"duration":187200000,"id":"298027809","name":"UX Research Confetti - IV edycja","date_in_series_pattern":false,"status":"upcoming","time":1716202800000,"local_date":"2024-05-20","local_time":"13:00","updated":1702985612000,"utc_offset":7200000,"waitlist_count":0,"yes_rsvp_count":24,"venue":{"id":27549223,"name":"Allegro Warsaw Office","lat":52.23224639892578,"lon":20.992111206054688,"repinned":true,"address_1":"ul. Żelazna 51/53","city":"Warszawa","country":"pl","localized_country_name":"Poland"},"is_online_event":false,"eventType":"PHYSICAL","group":{"created":1425052059000,"name":"allegro Tech","id":18465254,"join_mode":"open","lat":52.2599983215332,"lon":21.020000457763672,"urlname":"allegrotech","who":"Techs","localized_location":"Warsaw, Poland","state":"","country":"pl","region":"en_US","timezone":"Europe/Warsaw"},"link":"https://www.meetup.com/allegrotech/events/298027809/","description":"**🎉 Przedstawiamy 4. edycję UX Research Confetti - bezpłatną, polską konferencję poświęconą badaniom UX, organizowaną przez zespół badaczy z Allegro.** ✨ Konferencja odbędzie się w…","visibility":"public","member_pay_fee":false},{"created":1701092071000,"duration":7200000,"id":"297614064","name":"Allegro Tech Talks #40 - Testy: dynamiczne dashboardy & optymalizacja pracy","date_in_series_pattern":false,"status":"past","time":1701968400000,"local_date":"2023-12-07","local_time":"18:00","updated":1701978668000,"utc_offset":3600000,"waitlist_count":0,"yes_rsvp_count":13,"venue":{"id":27528185,"name":"Allegro Kraków Office","lat":50.06517028808594,"lon":19.951927185058594,"repinned":true,"address_1":"Lubicz Park A (5 piętro)","address_2":"ul. Lubicz 23","city":"Kraków","country":"pl","localized_country_name":"Poland"},"is_online_event":false,"eventType":"PHYSICAL","group":{"created":1425052059000,"name":"allegro Tech","id":18465254,"join_mode":"open","lat":52.2599983215332,"lon":21.020000457763672,"urlname":"allegrotech","who":"Techs","localized_location":"Warsaw, Poland","state":"","country":"pl","region":"en_US","timezone":"Europe/Warsaw"},"link":"https://www.meetup.com/allegrotech/events/297614064/","description":"**➡ Rejestracja:** [https://app.evenea.pl/event/allegro-tech-talk-40/](https://app.evenea.pl/event/allegro-tech-talk-40/) Jeszcze przed świętami zapraszamy Was na #40 wydarzenie z serii Allegro Tech Talk, podczas których dzielimy się wiedzą, wzajemnie inspirujemy oraz integrujemy…","how_to_find_us":"Biuro Allegro znajduje się w Centrum Biurowym Lubicz. \n\nObok budynku znajduje się przystanek Lubicz. Przy przystanku zatrzymują się tramwaje 2, 4, 10, 14, 20, 52, 62, 64 oraz autobusy: 124, 152, 424, 601, 611, 662, 664.\n\n","visibility":"public","member_pay_fee":false},{"created":1700495058000,"duration":7200000,"id":"297480100","name":"Allegro Tech Talks #39 - Big Data: o podejściu do pracy z danymi","date_in_series_pattern":false,"status":"past","time":1701363600000,"local_date":"2023-11-30","local_time":"18:00","updated":1701377876000,"utc_offset":3600000,"waitlist_count":0,"yes_rsvp_count":50,"venue":{"id":27549223,"name":"Allegro Warsaw Office","lat":52.23224639892578,"lon":20.992111206054688,"repinned":true,"address_1":"ul. Żelazna 51/53","city":"Warszawa","country":"pl","localized_country_name":"Poland"},"is_online_event":false,"eventType":"PHYSICAL","group":{"created":1425052059000,"name":"allegro Tech","id":18465254,"join_mode":"open","lat":52.2599983215332,"lon":21.020000457763672,"urlname":"allegrotech","who":"Techs","localized_location":"Warsaw, Poland","state":"","country":"pl","region":"en_US","timezone":"Europe/Warsaw"},"link":"https://www.meetup.com/allegrotech/events/297480100/","description":"**Rejestracja: [https://app.evenea.pl/event/allegro-tech-talk-39/](https://app.evenea.pl/event/allegro-tech-talk-39/)** Bądźcie z nami podczas #39 wydarzenia z serii **Allegro Tech Talk**, podczas których dzielimy się wiedzą, wzajemnie inspirujemy oraz integrujemy podczas rozmów przy…","how_to_find_us":"Biuro Allegro znajduje się w kompleksie Fabryki Norblina (wejście Plater 3 od ul. Żelaznej). W niedalekiej odległości znajdują się dwie stacje metra linii M2, Rondo Daszyńskiego i Rondo ONZ. Autobusy, tramwaje i inne środki transportu sprawdzisz też na: https://fabrykanorblina.pl/dojazd","visibility":"public","member_pay_fee":false},{"created":1685697967000,"duration":7200000,"id":"293929321","name":"Allegro Tech Talks #38 - Mobile: o iOS bez spinki","date_in_series_pattern":false,"status":"past","time":1686760200000,"local_date":"2023-06-14","local_time":"18:30","updated":1686773845000,"utc_offset":7200000,"waitlist_count":0,"yes_rsvp_count":17,"venue":{"id":27549223,"name":"Allegro Warsaw Office","lat":0,"lon":0,"repinned":true,"address_1":"ul. Żelazna 51/53","city":"Warszawa","country":"pl","localized_country_name":"Poland"},"is_online_event":false,"eventType":"PHYSICAL","group":{"created":1425052059000,"name":"allegro Tech","id":18465254,"join_mode":"open","lat":52.2599983215332,"lon":21.020000457763672,"urlname":"allegrotech","who":"Techs","localized_location":"Warsaw, Poland","state":"","country":"pl","region":"en_US","timezone":"Europe/Warsaw"},"link":"https://www.meetup.com/allegrotech/events/293929321/","description":"**➡ Rejestracja:** [https://app.evenea.pl/event/allegro-tech-talk-38/](https://app.evenea.pl/event/allegro-tech-talk-38/) Ostatnie przed przerwą wakacyjną, stacjonarne spotkanie z cyklu Allegro Tech Talks, na których dzielimy się wiedzą, wzajemnie inspirujemy oraz integrujemy podczas rozmów…","how_to_find_us":"Biuro Allegro znajduje się w kompleksie Fabryki Norblina (wejście Plater 3 od ul. Żelaznej). W niedalekiej odległości znajdują się dwie stacje metra linii M2, Rondo Daszyńskiego i Rondo ONZ. Autobusy, tramwaje i inne środki transportu sprawdzisz też na: https://fabrykanorblina.pl/dojazd","visibility":"public","member_pay_fee":false}],"podcasts":[{"title":"Programowanie - co liczy się w nim najbardziej?","link":"https://podcast.allegro.tech/programowanie-co-liczy-sie-w-nim-najbardziej/","pubDate":"Thu, 01 Feb 2024 00:00:00 GMT","content":"Jaką ścieżkę trzeba przejść, aby dobrze programować? Gdzie zdobywać wiedzę, doświadczenie i szlifować swoje umiejętności? Ile czasu potrzeba aby nabrać doświadczenia i jak zadbać o swój dalszy rozwój? Na czym w praktyce polegają role (Senior) Software Engineer oraz Engineering Manager w Allegro i kto najlepiej sprawdza się w naszych zespołach? Posłuchajcie nowego odcinka Allegro Tech Podcast z udziałem Rafała Schmidta (Senior Software Engineer) i Waldemara Panasa (Manager, Engineering) z Allegro.","contentSnippet":"Jaką ścieżkę trzeba przejść, aby dobrze programować? Gdzie zdobywać wiedzę, doświadczenie i szlifować swoje umiejętności? Ile czasu potrzeba aby nabrać doświadczenia i jak zadbać o swój dalszy rozwój? Na czym w praktyce polegają role (Senior) Software Engineer oraz Engineering Manager w Allegro i kto najlepiej sprawdza się w naszych zespołach? Posłuchajcie nowego odcinka Allegro Tech Podcast z udziałem Rafała Schmidta (Senior Software Engineer) i Waldemara Panasa (Manager, Engineering) z Allegro.","guid":"https://podcast.allegro.tech/programowanie-co-liczy-sie-w-nim-najbardziej/","isoDate":"2024-02-01T00:00:00.000Z"},{"title":"MBox: server-driven UI dla aplikacji mobilnych","link":"https://podcast.allegro.tech/mbox-server-driven-ui-dla-aplikacji-mobilnych/","pubDate":"Thu, 16 Nov 2023 00:00:00 GMT","content":"Czym jest i jak powstał MBox: wewnętrzna platforma server-driven UI dla aplikacji mobilnych w Allegro? Skąd wziął się pomysł na to rozwiązanie i na jakie bolączki odpowiada? Dlaczego zdecydowaliśmy się na budowanie tego typu rozwiązania in-house i z jakimi wyzwaniami mierzyliśmy się w procesie tworzenia? Co wyróżnia zespoły pracujące nad tym narzędziem i jak pracuje im się bez Product Ownera? Posłuchajcie siódmego odcinka Allegro Tech Podcast z udziałem Pauliny Sadowskiej i Tomasza Gębarowskiego - Managerów w obszarze Technical Platform Services w Allegro.","contentSnippet":"Czym jest i jak powstał MBox: wewnętrzna platforma server-driven UI dla aplikacji mobilnych w Allegro? Skąd wziął się pomysł na to rozwiązanie i na jakie bolączki odpowiada? Dlaczego zdecydowaliśmy się na budowanie tego typu rozwiązania in-house i z jakimi wyzwaniami mierzyliśmy się w procesie tworzenia? Co wyróżnia zespoły pracujące nad tym narzędziem i jak pracuje im się bez Product Ownera? Posłuchajcie siódmego odcinka Allegro Tech Podcast z udziałem Pauliny Sadowskiej i Tomasza Gębarowskiego - Managerów w obszarze Technical Platform Services w Allegro.","guid":"https://podcast.allegro.tech/mbox-server-driven-ui-dla-aplikacji-mobilnych/","isoDate":"2023-11-16T00:00:00.000Z"},{"title":"O chatbotach i ich wpływie na Allegro","link":"https://podcast.allegro.tech/o-chatbotach-i-ich-wplywie-na-allegro/","pubDate":"Wed, 11 Oct 2023 00:00:00 GMT","content":"Jakie procesy automatyzujemy w Allegro i co warto o nich wiedzieć w kontekście obszaru Customer Experience? W czym pomagają nam chatboty, jak je rozwijamy i dbamy o ich jakość? Kim są Allina oraz Albert i co mają wspólnego z automatyzacją? Za jakie rozwiązania otrzymaliśmy nagrodę hiperautomatyzacji? O tym wszystkim posłuchacie w odcinku z udziałem Rafała Gajewskiego - Managera w obszarze IT Services w Allegro.","contentSnippet":"Jakie procesy automatyzujemy w Allegro i co warto o nich wiedzieć w kontekście obszaru Customer Experience? W czym pomagają nam chatboty, jak je rozwijamy i dbamy o ich jakość? Kim są Allina oraz Albert i co mają wspólnego z automatyzacją? Za jakie rozwiązania otrzymaliśmy nagrodę hiperautomatyzacji? O tym wszystkim posłuchacie w odcinku z udziałem Rafała Gajewskiego - Managera w obszarze IT Services w Allegro.","guid":"https://podcast.allegro.tech/o-chatbotach-i-ich-wplywie-na-allegro/","isoDate":"2023-10-11T00:00:00.000Z"},{"title":"O roli analityków biznesowych w Allegro","link":"https://podcast.allegro.tech/o-roli-analitykow-biznesowych-w-allegro/","pubDate":"Thu, 24 Aug 2023 00:00:00 GMT","content":"Czym zajmują się analitycy danych w Allegro i za jakie projekty odpowiadają? Z jakich rodzajów danych i narzędzi korzystają w codziennej pracy? Jakie (przykładowe) obszary tematyczne pokrywamy danymi, które analizujemy w Allegro? Jakich umiejętności szukamy u analityków biznesowych w Allegro i jak można do nas dołączyć? O roli analityków biznesowych i pracy w skali Allegro opowiadają Jakub Król i Mateusz Falkowski - Senior Data Analysts w Allegro.","contentSnippet":"Czym zajmują się analitycy danych w Allegro i za jakie projekty odpowiadają? Z jakich rodzajów danych i narzędzi korzystają w codziennej pracy? Jakie (przykładowe) obszary tematyczne pokrywamy danymi, które analizujemy w Allegro? Jakich umiejętności szukamy u analityków biznesowych w Allegro i jak można do nas dołączyć? O roli analityków biznesowych i pracy w skali Allegro opowiadają Jakub Król i Mateusz Falkowski - Senior Data Analysts w Allegro.","guid":"https://podcast.allegro.tech/o-roli-analitykow-biznesowych-w-allegro/","isoDate":"2023-08-24T00:00:00.000Z"}]},"__N_SSG":true}